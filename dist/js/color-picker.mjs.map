{"version":3,"file":"color-picker.mjs","sources":["../../node_modules/.pnpm/@thednp+shorty@2.0.0-alpha22/node_modules/@thednp/shorty/dist/shorty.mjs","../../node_modules/.pnpm/@thednp+color@1.0.8/node_modules/@thednp/color/dist/index.mjs","../../src/ts/colorPalette.ts","../../src/ts/util/colorPickerLabels.ts","../../src/ts/util/colorNames.ts","../../src/ts/util/isValidJSON.ts","../../src/ts/util/vHidden.ts","../../src/ts/util/getColorForm.ts","../../src/ts/util/getColorControls.ts","../../src/ts/util/getColorMenu.ts","../../src/ts/util/setMarkup.ts","../../src/ts/index.ts"],"sourcesContent":["const pe = \"aria-checked\", me = \"aria-description\", fe = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Me = \"aria-valuetext\", q = \"abort\", G = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", mt = \"mouseenter\", ft = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Mt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Ot = \"select\", Lt = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ft = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: q,\n  beforeunload: G,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: ft,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Mt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Ot,\n  selectend: Lt,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ft\n}, De = \"drag\", Ce = \"dragstart\", Oe = \"dragenter\", Le = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, Ue = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", je = \"ArrowLeft\", qe = \"ArrowRight\", Ge = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"NumpadEnter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Ut = \"animationDuration\", Wt = \"animationDelay\", F = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", mn = \"scrollWidth\", fn = \"tabindex\", jt = navigator.userAgentData, A = jt, { userAgent: qt } = navigator, S = qt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst gn = O, x = /(iPhone|iPod|iPad)/, vn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), En = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Gt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  Gt(t, e, s, o);\n}, Xt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Yt = (t, e) => t.getAttribute(e), Nn = (t, e, n) => e.getAttributeNS(t, n), kn = (t, e) => t.hasAttribute(e), Mn = (t, e, n) => e.hasAttributeNS(t, n), Tn = (t, e, n) => t.setAttribute(e, n), Dn = (t, e, n, o) => e.setAttributeNS(t, n, o), Cn = (t, e) => t.removeAttribute(e), On = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, In = (t, ...e) => {\n  t.classList.remove(...e);\n}, zn = (t, e) => t.classList.contains(e), { body: xn } = document, { documentElement: Vn } = document, Bn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Hn = (t, e) => L.get(t, e), k = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, M = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Pn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, F), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, F), n = g(t, Ut), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Fn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, U), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, U), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Wn = (t) => Float32Array.from(Array.from(t)), Rn = (t) => Float64Array.from(Array.from(t)), Qn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), jn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, m]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (j) => oe(j)) : c;\n    l[y] = V(m);\n  }), w(s).forEach(([c, m]) => {\n    s[c] = V(m);\n  }), w(e).forEach(([c, m]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : m;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), Jn = (t) => Object.values(t), Kn = (t) => Object.fromEntries(t), Xn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && M(n, e), n;\n}, Yn = { passive: !0 }, Zn = (t) => t.offsetHeight, $n = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, f = /* @__PURE__ */ new Map(), _n = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (f.has(t) || f.set(t, /* @__PURE__ */ new Map()), f.get(t).set(o, setTimeout(e, n))) : f.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = f.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = f.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && f.delete(t)) : (clearTimeout(n), f.delete(t));\n  }\n}, to = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: m, offsetHeight: y } = t;\n    p = m > 0 ? Math.round(n) / m : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, eo = (t) => d(t).body, T = (t) => d(t).documentElement, no = (t) => d(t).head, oo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, so = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, co = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, ro = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, ao = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, io = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, uo = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, lo = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, po = (t) => ie(t) && t.every(u) || !1, mo = (t) => typeof t == \"function\" || !1, fo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, go = (t) => u(t) && t.tagName === \"IMG\" || !1, vo = (t) => {\n  if (!k(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Eo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, bo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, ho = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, yo = (t) => T(t).dir === \"rtl\", wo = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Ao = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, So = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), No = (t) => [...de(\"*\", t)].filter(ue), ko = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), To = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), Do = (t, e) => t.matches(e), Co = \"2.0.0alpha22\";\nexport {\n  Bn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  L as Data,\n  Wn as Float32ArrayFrom,\n  Rn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  Kn as ObjectFromEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  Jn as ObjectValues,\n  _n as Timer,\n  q as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Wt as animationDelay,\n  Ut as animationDuration,\n  D as animationEndEvent,\n  F as animationName,\n  pe as ariaChecked,\n  fe as ariaDescribedBy,\n  me as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Ne as ariaValueMax,\n  Se as ariaValueMin,\n  ke as ariaValueNow,\n  Me as ariaValueText,\n  G as beforeunloadEvent,\n  un as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Xn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Pn as distinct,\n  xn as documentBody,\n  Vn as documentElement,\n  N as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Oe as dragenterEvent,\n  Le as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Fn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Qn as focus,\n  $ as focusEvent,\n  Fe as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Nn as getAttributeNS,\n  h as getBoundingClientRect,\n  No as getCustomElements,\n  d as getDocument,\n  eo as getDocumentBody,\n  T as getDocumentElement,\n  no as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  ko as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  To as getElementsByClassName,\n  de as getElementsByTagName,\n  Hn as getInstance,\n  oo as getNodeScroll,\n  so as getParentNode,\n  co as getRectRelativeToOffsetParent,\n  ae as getUID,\n  ro as getWindow,\n  kn as hasAttribute,\n  Mn as hasAttributeNS,\n  zn as hasClass,\n  vn as isApple,\n  ie as isArray,\n  ao as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  io as isElement,\n  uo as isElementInScrollRange,\n  lo as isElementInViewport,\n  po as isElementsArray,\n  En as isFirefox,\n  mo as isFunction,\n  fo as isHTMLCollection,\n  u as isHTMLElement,\n  go as isHTMLImageElement,\n  vo as isJSON,\n  I as isMap,\n  bo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  ho as isNodeList,\n  se as isNumber,\n  v as isObject,\n  yo as isRTL,\n  wo as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  k as isString,\n  Ao as isTableElement,\n  Eo as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  je as keyArrowLeft,\n  qe as keyArrowRight,\n  Qe as keyArrowUp,\n  Ge as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  Ze as keyNumpadEnter,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  Ue as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  Do as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  mt as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  ft as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  jn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Gt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Yn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Mt as pointerupEvent,\n  So as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Zn as reflow,\n  Cn as removeAttribute,\n  On as removeAttributeNS,\n  In as removeClass,\n  an as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  pn as scrollHeight,\n  mn as scrollWidth,\n  Ot as selectEvent,\n  Lt as selectendEvent,\n  It as selectstartEvent,\n  Tn as setAttribute,\n  Dn as setAttributeNS,\n  $n as setElementStyle,\n  xt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  to as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  Co as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const N = [\"transparent\", \"currentColor\", \"inherit\", \"revert\", \"initial\"], b = (o) => {\n  const t = Math.floor(o);\n  return o - t < 0.5 ? t : Math.round(o);\n}, T = [\n  [\n    \"aliceblue\",\n    {\n      r: 240,\n      g: 248,\n      b: 255\n    }\n  ],\n  [\n    \"antiquewhite\",\n    {\n      r: 250,\n      g: 235,\n      b: 215\n    }\n  ],\n  [\n    \"aqua\",\n    {\n      r: 0,\n      g: 255,\n      b: 255\n    }\n  ],\n  [\n    \"aquamarine\",\n    {\n      r: 127,\n      g: 255,\n      b: 212\n    }\n  ],\n  [\n    \"azure\",\n    {\n      r: 240,\n      g: 255,\n      b: 255\n    }\n  ],\n  [\n    \"beige\",\n    {\n      r: 245,\n      g: 245,\n      b: 220\n    }\n  ],\n  [\n    \"bisque\",\n    {\n      r: 255,\n      g: 228,\n      b: 196\n    }\n  ],\n  [\n    \"black\",\n    {\n      r: 0,\n      g: 0,\n      b: 0\n    }\n  ],\n  [\n    \"blanchedalmond\",\n    {\n      r: 255,\n      g: 235,\n      b: 205\n    }\n  ],\n  [\n    \"blue\",\n    {\n      r: 0,\n      g: 0,\n      b: 255\n    }\n  ],\n  [\n    \"blueviolet\",\n    {\n      r: 138,\n      g: 43,\n      b: 226\n    }\n  ],\n  [\n    \"brown\",\n    {\n      r: 165,\n      g: 42,\n      b: 42\n    }\n  ],\n  [\n    \"burlywood\",\n    {\n      r: 222,\n      g: 184,\n      b: 135\n    }\n  ],\n  [\n    \"cadetblue\",\n    {\n      r: 95,\n      g: 158,\n      b: 160\n    }\n  ],\n  [\n    \"chartreuse\",\n    {\n      r: 127,\n      g: 255,\n      b: 0\n    }\n  ],\n  [\n    \"chocolate\",\n    {\n      r: 210,\n      g: 105,\n      b: 30\n    }\n  ],\n  [\n    \"coral\",\n    {\n      r: 255,\n      g: 127,\n      b: 80\n    }\n  ],\n  [\n    \"cornflowerblue\",\n    {\n      r: 100,\n      g: 149,\n      b: 237\n    }\n  ],\n  [\n    \"cornsilk\",\n    {\n      r: 255,\n      g: 248,\n      b: 220\n    }\n  ],\n  [\n    \"crimson\",\n    {\n      r: 220,\n      g: 20,\n      b: 60\n    }\n  ],\n  [\n    \"cyan\",\n    {\n      r: 0,\n      g: 255,\n      b: 255\n    }\n  ],\n  [\n    \"darkblue\",\n    {\n      r: 0,\n      g: 0,\n      b: 139\n    }\n  ],\n  [\n    \"darkcyan\",\n    {\n      r: 0,\n      g: 139,\n      b: 139\n    }\n  ],\n  [\n    \"darkgoldenrod\",\n    {\n      r: 184,\n      g: 134,\n      b: 11\n    }\n  ],\n  [\n    \"darkgray\",\n    {\n      r: 169,\n      g: 169,\n      b: 169\n    }\n  ],\n  [\n    \"darkgreen\",\n    {\n      r: 0,\n      g: 100,\n      b: 0\n    }\n  ],\n  [\n    \"darkgrey\",\n    {\n      r: 169,\n      g: 169,\n      b: 169\n    }\n  ],\n  [\n    \"darkkhaki\",\n    {\n      r: 189,\n      g: 183,\n      b: 107\n    }\n  ],\n  [\n    \"darkmagenta\",\n    {\n      r: 139,\n      g: 0,\n      b: 139\n    }\n  ],\n  [\n    \"darkolivegreen\",\n    {\n      r: 85,\n      g: 107,\n      b: 47\n    }\n  ],\n  [\n    \"darkorange\",\n    {\n      r: 255,\n      g: 140,\n      b: 0\n    }\n  ],\n  [\n    \"darkorchid\",\n    {\n      r: 153,\n      g: 50,\n      b: 204\n    }\n  ],\n  [\n    \"darkred\",\n    {\n      r: 139,\n      g: 0,\n      b: 0\n    }\n  ],\n  [\n    \"darksalmon\",\n    {\n      r: 233,\n      g: 150,\n      b: 122\n    }\n  ],\n  [\n    \"darkseagreen\",\n    {\n      r: 143,\n      g: 188,\n      b: 143\n    }\n  ],\n  [\n    \"darkslateblue\",\n    {\n      r: 72,\n      g: 61,\n      b: 139\n    }\n  ],\n  [\n    \"darkslategray\",\n    {\n      r: 47,\n      g: 79,\n      b: 79\n    }\n  ],\n  [\n    \"darkslategrey\",\n    {\n      r: 47,\n      g: 79,\n      b: 79\n    }\n  ],\n  [\n    \"darkturquoise\",\n    {\n      r: 0,\n      g: 206,\n      b: 209\n    }\n  ],\n  [\n    \"darkviolet\",\n    {\n      r: 148,\n      g: 0,\n      b: 211\n    }\n  ],\n  [\n    \"deeppink\",\n    {\n      r: 255,\n      g: 20,\n      b: 147\n    }\n  ],\n  [\n    \"deepskyblue\",\n    {\n      r: 0,\n      g: 191,\n      b: 255\n    }\n  ],\n  [\n    \"dimgray\",\n    {\n      r: 105,\n      g: 105,\n      b: 105\n    }\n  ],\n  [\n    \"dimgrey\",\n    {\n      r: 105,\n      g: 105,\n      b: 105\n    }\n  ],\n  [\n    \"dodgerblue\",\n    {\n      r: 30,\n      g: 144,\n      b: 255\n    }\n  ],\n  [\n    \"firebrick\",\n    {\n      r: 178,\n      g: 34,\n      b: 34\n    }\n  ],\n  [\n    \"floralwhite\",\n    {\n      r: 255,\n      g: 250,\n      b: 240\n    }\n  ],\n  [\n    \"forestgreen\",\n    {\n      r: 34,\n      g: 139,\n      b: 34\n    }\n  ],\n  [\n    \"fuchsia\",\n    {\n      r: 255,\n      g: 0,\n      b: 255\n    }\n  ],\n  [\n    \"gainsboro\",\n    {\n      r: 220,\n      g: 220,\n      b: 220\n    }\n  ],\n  [\n    \"ghostwhite\",\n    {\n      r: 248,\n      g: 248,\n      b: 255\n    }\n  ],\n  [\n    \"goldenrod\",\n    {\n      r: 218,\n      g: 165,\n      b: 32\n    }\n  ],\n  [\n    \"gold\",\n    {\n      r: 255,\n      g: 215,\n      b: 0\n    }\n  ],\n  [\n    \"gray\",\n    {\n      r: 128,\n      g: 128,\n      b: 128\n    }\n  ],\n  [\n    \"green\",\n    {\n      r: 0,\n      g: 128,\n      b: 0\n    }\n  ],\n  [\n    \"greenyellow\",\n    {\n      r: 173,\n      g: 255,\n      b: 47\n    }\n  ],\n  [\n    \"grey\",\n    {\n      r: 128,\n      g: 128,\n      b: 128\n    }\n  ],\n  [\n    \"honeydew\",\n    {\n      r: 240,\n      g: 255,\n      b: 240\n    }\n  ],\n  [\n    \"hotpink\",\n    {\n      r: 255,\n      g: 105,\n      b: 180\n    }\n  ],\n  [\n    \"indianred\",\n    {\n      r: 205,\n      g: 92,\n      b: 92\n    }\n  ],\n  [\n    \"indigo\",\n    {\n      r: 75,\n      g: 0,\n      b: 130\n    }\n  ],\n  [\n    \"ivory\",\n    {\n      r: 255,\n      g: 255,\n      b: 240\n    }\n  ],\n  [\n    \"khaki\",\n    {\n      r: 240,\n      g: 230,\n      b: 140\n    }\n  ],\n  [\n    \"lavenderblush\",\n    {\n      r: 255,\n      g: 240,\n      b: 245\n    }\n  ],\n  [\n    \"lavender\",\n    {\n      r: 230,\n      g: 230,\n      b: 250\n    }\n  ],\n  [\n    \"lawngreen\",\n    {\n      r: 124,\n      g: 252,\n      b: 0\n    }\n  ],\n  [\n    \"lemonchiffon\",\n    {\n      r: 255,\n      g: 250,\n      b: 205\n    }\n  ],\n  [\n    \"lightblue\",\n    {\n      r: 173,\n      g: 216,\n      b: 230\n    }\n  ],\n  [\n    \"lightcoral\",\n    {\n      r: 240,\n      g: 128,\n      b: 128\n    }\n  ],\n  [\n    \"lightcyan\",\n    {\n      r: 224,\n      g: 255,\n      b: 255\n    }\n  ],\n  [\n    \"lightgoldenrodyellow\",\n    {\n      r: 250,\n      g: 250,\n      b: 210\n    }\n  ],\n  [\n    \"lightgray\",\n    {\n      r: 211,\n      g: 211,\n      b: 211\n    }\n  ],\n  [\n    \"lightgreen\",\n    {\n      r: 144,\n      g: 238,\n      b: 144\n    }\n  ],\n  [\n    \"lightgrey\",\n    {\n      r: 211,\n      g: 211,\n      b: 211\n    }\n  ],\n  [\n    \"lightpink\",\n    {\n      r: 255,\n      g: 182,\n      b: 193\n    }\n  ],\n  [\n    \"lightsalmon\",\n    {\n      r: 255,\n      g: 160,\n      b: 122\n    }\n  ],\n  [\n    \"lightseagreen\",\n    {\n      r: 32,\n      g: 178,\n      b: 170\n    }\n  ],\n  [\n    \"lightskyblue\",\n    {\n      r: 135,\n      g: 206,\n      b: 250\n    }\n  ],\n  [\n    \"lightslategray\",\n    {\n      r: 119,\n      g: 136,\n      b: 153\n    }\n  ],\n  [\n    \"lightslategrey\",\n    {\n      r: 119,\n      g: 136,\n      b: 153\n    }\n  ],\n  [\n    \"lightsteelblue\",\n    {\n      r: 176,\n      g: 196,\n      b: 222\n    }\n  ],\n  [\n    \"lightyellow\",\n    {\n      r: 255,\n      g: 255,\n      b: 224\n    }\n  ],\n  [\n    \"lime\",\n    {\n      r: 0,\n      g: 255,\n      b: 0\n    }\n  ],\n  [\n    \"limegreen\",\n    {\n      r: 50,\n      g: 205,\n      b: 50\n    }\n  ],\n  [\n    \"linen\",\n    {\n      r: 250,\n      g: 240,\n      b: 230\n    }\n  ],\n  [\n    \"magenta\",\n    {\n      r: 255,\n      g: 0,\n      b: 255\n    }\n  ],\n  [\n    \"maroon\",\n    {\n      r: 128,\n      g: 0,\n      b: 0\n    }\n  ],\n  [\n    \"mediumaquamarine\",\n    {\n      r: 102,\n      g: 205,\n      b: 170\n    }\n  ],\n  [\n    \"mediumblue\",\n    {\n      r: 0,\n      g: 0,\n      b: 205\n    }\n  ],\n  [\n    \"mediumorchid\",\n    {\n      r: 186,\n      g: 85,\n      b: 211\n    }\n  ],\n  [\n    \"mediumpurple\",\n    {\n      r: 147,\n      g: 112,\n      b: 219\n    }\n  ],\n  [\n    \"mediumseagreen\",\n    {\n      r: 60,\n      g: 179,\n      b: 113\n    }\n  ],\n  [\n    \"mediumslateblue\",\n    {\n      r: 123,\n      g: 104,\n      b: 238\n    }\n  ],\n  [\n    \"mediumspringgreen\",\n    {\n      r: 0,\n      g: 250,\n      b: 154\n    }\n  ],\n  [\n    \"mediumturquoise\",\n    {\n      r: 72,\n      g: 209,\n      b: 204\n    }\n  ],\n  [\n    \"mediumvioletred\",\n    {\n      r: 199,\n      g: 21,\n      b: 133\n    }\n  ],\n  [\n    \"midnightblue\",\n    {\n      r: 25,\n      g: 25,\n      b: 112\n    }\n  ],\n  [\n    \"mintcream\",\n    {\n      r: 245,\n      g: 255,\n      b: 250\n    }\n  ],\n  [\n    \"mistyrose\",\n    {\n      r: 255,\n      g: 228,\n      b: 225\n    }\n  ],\n  [\n    \"moccasin\",\n    {\n      r: 255,\n      g: 228,\n      b: 181\n    }\n  ],\n  [\n    \"navajowhite\",\n    {\n      r: 255,\n      g: 222,\n      b: 173\n    }\n  ],\n  [\n    \"navy\",\n    {\n      r: 0,\n      g: 0,\n      b: 128\n    }\n  ],\n  [\n    \"oldlace\",\n    {\n      r: 253,\n      g: 245,\n      b: 230\n    }\n  ],\n  [\n    \"olive\",\n    {\n      r: 128,\n      g: 128,\n      b: 0\n    }\n  ],\n  [\n    \"olivedrab\",\n    {\n      r: 107,\n      g: 142,\n      b: 35\n    }\n  ],\n  [\n    \"orange\",\n    {\n      r: 255,\n      g: 165,\n      b: 0\n    }\n  ],\n  [\n    \"orangered\",\n    {\n      r: 255,\n      g: 69,\n      b: 0\n    }\n  ],\n  [\n    \"orchid\",\n    {\n      r: 218,\n      g: 112,\n      b: 214\n    }\n  ],\n  [\n    \"palegoldenrod\",\n    {\n      r: 238,\n      g: 232,\n      b: 170\n    }\n  ],\n  [\n    \"palegreen\",\n    {\n      r: 152,\n      g: 251,\n      b: 152\n    }\n  ],\n  [\n    \"paleturquoise\",\n    {\n      r: 175,\n      g: 238,\n      b: 238\n    }\n  ],\n  [\n    \"palevioletred\",\n    {\n      r: 219,\n      g: 112,\n      b: 147\n    }\n  ],\n  [\n    \"papayawhip\",\n    {\n      r: 255,\n      g: 239,\n      b: 213\n    }\n  ],\n  [\n    \"peachpuff\",\n    {\n      r: 255,\n      g: 218,\n      b: 185\n    }\n  ],\n  [\n    \"peru\",\n    {\n      r: 205,\n      g: 133,\n      b: 63\n    }\n  ],\n  [\n    \"pink\",\n    {\n      r: 255,\n      g: 192,\n      b: 203\n    }\n  ],\n  [\n    \"plum\",\n    {\n      r: 221,\n      g: 160,\n      b: 221\n    }\n  ],\n  [\n    \"powderblue\",\n    {\n      r: 176,\n      g: 224,\n      b: 230\n    }\n  ],\n  [\n    \"purple\",\n    {\n      r: 128,\n      g: 0,\n      b: 128\n    }\n  ],\n  [\n    \"rebeccapurple\",\n    {\n      r: 102,\n      g: 51,\n      b: 153\n    }\n  ],\n  [\n    \"red\",\n    {\n      r: 255,\n      g: 0,\n      b: 0\n    }\n  ],\n  [\n    \"rosybrown\",\n    {\n      r: 188,\n      g: 143,\n      b: 143\n    }\n  ],\n  [\n    \"royalblue\",\n    {\n      r: 65,\n      g: 105,\n      b: 225\n    }\n  ],\n  [\n    \"saddlebrown\",\n    {\n      r: 139,\n      g: 69,\n      b: 19\n    }\n  ],\n  [\n    \"salmon\",\n    {\n      r: 250,\n      g: 128,\n      b: 114\n    }\n  ],\n  [\n    \"sandybrown\",\n    {\n      r: 244,\n      g: 164,\n      b: 96\n    }\n  ],\n  [\n    \"seagreen\",\n    {\n      r: 46,\n      g: 139,\n      b: 87\n    }\n  ],\n  [\n    \"seashell\",\n    {\n      r: 255,\n      g: 245,\n      b: 238\n    }\n  ],\n  [\n    \"sienna\",\n    {\n      r: 160,\n      g: 82,\n      b: 45\n    }\n  ],\n  [\n    \"silver\",\n    {\n      r: 192,\n      g: 192,\n      b: 192\n    }\n  ],\n  [\n    \"skyblue\",\n    {\n      r: 135,\n      g: 206,\n      b: 235\n    }\n  ],\n  [\n    \"slateblue\",\n    {\n      r: 106,\n      g: 90,\n      b: 205\n    }\n  ],\n  [\n    \"slategray\",\n    {\n      r: 112,\n      g: 128,\n      b: 144\n    }\n  ],\n  [\n    \"slategrey\",\n    {\n      r: 112,\n      g: 128,\n      b: 144\n    }\n  ],\n  [\n    \"snow\",\n    {\n      r: 255,\n      g: 250,\n      b: 250\n    }\n  ],\n  [\n    \"springgreen\",\n    {\n      r: 0,\n      g: 255,\n      b: 127\n    }\n  ],\n  [\n    \"steelblue\",\n    {\n      r: 70,\n      g: 130,\n      b: 180\n    }\n  ],\n  [\n    \"tan\",\n    {\n      r: 210,\n      g: 180,\n      b: 140\n    }\n  ],\n  [\n    \"teal\",\n    {\n      r: 0,\n      g: 128,\n      b: 128\n    }\n  ],\n  [\n    \"thistle\",\n    {\n      r: 216,\n      g: 191,\n      b: 216\n    }\n  ],\n  [\n    \"tomato\",\n    {\n      r: 255,\n      g: 99,\n      b: 71\n    }\n  ],\n  [\n    \"turquoise\",\n    {\n      r: 64,\n      g: 224,\n      b: 208\n    }\n  ],\n  [\n    \"violet\",\n    {\n      r: 238,\n      g: 130,\n      b: 238\n    }\n  ],\n  [\n    \"wheat\",\n    {\n      r: 245,\n      g: 222,\n      b: 179\n    }\n  ],\n  [\n    \"white\",\n    {\n      r: 255,\n      g: 255,\n      b: 255\n    }\n  ],\n  [\n    \"whitesmoke\",\n    {\n      r: 245,\n      g: 245,\n      b: 245\n    }\n  ],\n  [\n    \"yellow\",\n    {\n      r: 255,\n      g: 255,\n      b: 0\n    }\n  ],\n  [\n    \"yellowgreen\",\n    {\n      r: 154,\n      g: 205,\n      b: 50\n    }\n  ]\n], B = \"deg|rad|grad|turn\", U = \"[-\\\\+]?\\\\d+%?\", D = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\", L = `[-\\\\+]?\\\\d*\\\\.?\\\\d+(?:${B})?`, v = `(?:${D})|(?:${U})`, F = `(?:${v})|(?:${L}?)`, rr = \"(?:[\\\\s|\\\\(\\\\s|\\\\s\\\\(\\\\s]+)?\", tr = \"(?:[\\\\s|\\\\)\\\\s]+)?\", O = \"(?:[,|\\\\s]+)\", er = \"(?:[,|\\\\/\\\\s]*)?\", $ = `${rr}(${F})${O}(${v})${O}(${v})${er}(${v})?${tr}`, f = {\n  CSS_UNIT: new RegExp(F),\n  ANGLES: B,\n  CSS_ANGLE: L,\n  CSS_INTEGER: U,\n  CSS_NUMBER: D,\n  CSS_UNIT2: F,\n  PERMISSIVE_MATCH: $,\n  hwb: new RegExp(`hwb${$}`),\n  rgb: new RegExp(`rgb(?:a)?${$}`),\n  hsl: new RegExp(`hsl(?:a)?${$}`),\n  hsv: new RegExp(`hsv(?:a)?${$}`),\n  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n}, V = (o) => N.includes(o), k = (o, t) => o !== null && typeof o == \"object\" && Object.keys(t).every((r) => r in o), Z = (o) => `${o}`.includes(\".\") && parseFloat(o) === 1, R = (o) => typeof o == \"string\" && o.includes(\"%\"), c = (o) => !!f.CSS_UNIT.exec(`${o}`), z = [\"rgb\", \"hex\", \"hsl\", \"hsv\", \"hwb\"], J = (o) => N.includes(o) || [\"#\", ...z].some((t) => o.includes(t)) ? !1 : T.some(([t]) => o === t), u = (o, t) => {\n  let r = o;\n  if (typeof o == \"number\" && Math.min(o, 0) === 0 && // round values to 6 decimals Math.round(N * (10 ** 6)) / 10 ** 6\n  Math.max(o, 1) === 1)\n    return o;\n  Z(o) && (r = \"100%\");\n  const e = R(r);\n  return r = t === 360 ? parseFloat(r) : Math.min(t, Math.max(0, parseFloat(r))), e && (r = r * t / 100), Math.abs(r - t) < 1e-6 ? 1 : (t === 360 ? r = (r < 0 ? r % t + t : r % t) / t : r = r % t / t, r);\n}, M = (o) => {\n  let t = parseFloat(o);\n  return (Number.isNaN(t) || t < 0 || t > 1) && (t = 1), t;\n}, x = (o) => Math.min(1, Math.max(0, o)), p = (o) => o.length === 1 ? `0${o}` : String(o), K = (o) => {\n  const [[, t]] = T.filter(([r]) => r === o.toLowerCase());\n  return t;\n}, h = (o) => parseInt(o, 16), E = (o) => h(o) / 255, Q = (o) => b(o * 255).toString(16), _ = (o, t, r) => {\n  const e = Math.max(o, t, r), s = Math.min(o, t, r);\n  let n = 0, g = 0;\n  const a = (e + s) / 2;\n  if (e === s)\n    g = 0, n = 0;\n  else {\n    const i = e - s;\n    g = a > 0.5 ? i / (2 - e - s) : i / (e + s), e === o && (n = (t - r) / i + (t < r ? 6 : 0)), e === t && (n = (r - o) / i + 2), e === r && (n = (o - t) / i + 4), n /= 6;\n  }\n  return { h: n, s: g, l: a };\n}, H = (o, t, r) => {\n  let e = r;\n  return e < 0 && (e += 1), e > 1 && (e -= 1), e < 1 / 6 ? o + (t - o) * (6 * e) : e < 1 / 2 ? t : e < 2 / 3 ? o + (t - o) * (2 / 3 - e) * 6 : o;\n}, y = (o, t, r) => {\n  let e = 0, s = 0, n = 0;\n  if (t === 0)\n    s = r, n = r, e = r;\n  else if (r) {\n    const g = r < 0.5 ? r * (1 + t) : r + t - r * t, a = 2 * r - g;\n    e = H(a, g, o + 1 / 3), s = H(a, g, o), n = H(a, g, o - 1 / 3);\n  }\n  return { r: e, g: s, b: n };\n}, G = (o, t, r) => {\n  let e = 0, s = 0;\n  const n = Math.min(o, t, r), g = Math.max(o, t, r), a = 1 - g;\n  if (g === n)\n    return { h: 0, w: n, b: a };\n  o === n ? (e = t - r, s = 3) : (e = t === n ? r - o : o - t, s = t === n ? 5 : 1);\n  const i = (s - e / (g - n)) / 6;\n  return {\n    h: i === 1 ? 0 : i,\n    w: n,\n    b: a\n  };\n}, X = (o, t, r) => {\n  if (t + r >= 1) {\n    const g = t / (t + r);\n    return { r: g, g, b: g };\n  }\n  let { r: e, g: s, b: n } = y(o, 1, 0.5);\n  return [e, s, n] = [e, s, n].map((g) => g * (1 - t - r) + t), { r: e, g: s, b: n };\n}, P = (o, t, r) => {\n  const e = Math.max(o, t, r), s = Math.min(o, t, r);\n  let n = 0;\n  const g = e, a = e - s, i = e === 0 ? 0 : a / e;\n  return e === s ? n = 0 : (o === e && (n = (t - r) / a + (t < r ? 6 : 0)), t === e && (n = (r - o) / a + 2), r === e && (n = (o - t) / a + 4), n /= 6), { h: n, s: i, v: g };\n}, I = (o, t, r) => {\n  const e = o * 6, s = t, n = r, g = Math.floor(e), a = e - g, i = n * (1 - s), l = n * (1 - a * s), d = n * (1 - (1 - a) * s), m = g % 6, w = [n, l, i, i, d, n][m], S = [d, n, n, l, i, i][m], A = [i, i, d, n, n, l][m];\n  return { r: w, g: S, b: A };\n}, j = (o, t, r, e) => {\n  const s = [\n    p(b(o).toString(16)),\n    p(b(t).toString(16)),\n    p(b(r).toString(16))\n  ];\n  return e && s[0].charAt(0) === s[0].charAt(1) && s[1].charAt(0) === s[1].charAt(1) && s[2].charAt(0) === s[2].charAt(1) ? s[0].charAt(0) + s[1].charAt(0) + s[2].charAt(0) : s.join(\"\");\n}, C = (o, t, r, e, s) => {\n  const n = [\n    p(b(o).toString(16)),\n    p(b(t).toString(16)),\n    p(b(r).toString(16)),\n    p(Q(e))\n  ];\n  return s && n[0].charAt(0) === n[0].charAt(1) && n[1].charAt(0) === n[1].charAt(1) && n[2].charAt(0) === n[2].charAt(1) && n[3].charAt(0) === n[3].charAt(1) ? n[0].charAt(0) + n[1].charAt(0) + n[2].charAt(0) + n[3].charAt(0) : n.join(\"\");\n}, Y = (o) => {\n  const t = String(o).trim().toLowerCase();\n  if (J(t))\n    return Object.assign(K(t), {\n      a: 1,\n      format: \"rgb\",\n      ok: !0\n    });\n  if (V(t))\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: t === \"transparent\" ? 0 : 1,\n      format: \"rgb\",\n      ok: !0\n    };\n  let [, r, e, s, n] = f.rgb.exec(t) || [];\n  return r && e && s ? {\n    r,\n    g: e,\n    b: s,\n    a: n !== void 0 ? n : 1,\n    format: \"rgb\",\n    ok: !0\n  } : ([, r, e, s, n] = f.hsl.exec(t) || [], r && e && s ? {\n    h: r,\n    s: e,\n    l: s,\n    a: n !== void 0 ? n : 1,\n    format: \"hsl\",\n    ok: !0\n  } : ([, r, e, s, n] = f.hsv.exec(t) || [], r && e && s ? {\n    h: r,\n    s: e,\n    v: s,\n    a: n !== void 0 ? n : 1,\n    format: \"hsv\",\n    ok: !0\n  } : ([, r, e, s, n] = f.hwb.exec(t) || [], r && e && s ? {\n    h: r,\n    w: e,\n    b: s,\n    a: n !== void 0 ? n : 1,\n    format: \"hwb\",\n    ok: !0\n  } : ([, r, e, s, n] = f.hex8.exec(t) || [], r && e && s && n ? {\n    r: h(r),\n    g: h(e),\n    b: h(s),\n    a: E(n),\n    format: \"hex\",\n    ok: !0\n  } : ([, r, e, s] = f.hex6.exec(t) || [], r && e && s ? {\n    r: h(r),\n    g: h(e),\n    b: h(s),\n    a: 1,\n    format: \"hex\",\n    ok: !0\n  } : ([, r, e, s, n] = f.hex4.exec(t) || [], r && e && s && n ? {\n    r: h(r + r),\n    g: h(e + e),\n    b: h(s + s),\n    a: E(n + n),\n    format: \"hex\",\n    ok: !0\n  } : ([, r, e, s] = f.hex3.exec(t) || [], r && e && s ? {\n    r: h(r + r),\n    g: h(e + e),\n    b: h(s + s),\n    a: 1,\n    format: \"hex\",\n    ok: !0\n  } : {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n    format: \"rgb\",\n    ok: !o\n  })))))));\n}, q = (o) => {\n  let t = { r: 0, g: 0, b: 0 }, r = o, e = 1, s, n, g, a, i, l, d, m, w = \"rgb\", S = !1;\n  return (!r || typeof r == \"string\") && (r = Y(r), S = r.ok), k(r, t) && c(r.r) && c(r.g) && c(r.b) && ({ r: d, g: m, b: i } = r, [d, m, i] = [d, m, i].map((A) => u(A, R(A) ? 100 : 255)), t = { r: d, g: m, b: i }, w = \"format\" in r ? r.format : \"rgb\"), k(r, { h: 0, s: 0, v: 0 }) && c(r.h) && c(r.s) && c(r.v) && ({ h: l, s, v: n } = r, l = u(l, 360), s = u(s, 100), n = u(n, 100), t = I(l, s, n), w = \"hsv\"), k(r, { h: 0, s: 0, l: 0 }) && c(r.h) && c(r.s) && c(r.l) && ({ h: l, s, l: g } = r, l = u(l, 360), s = u(s, 100), g = u(g, 100), t = y(l, s, g), w = \"hsl\"), k(r, { h: 0, w: 0, b: 0 }) && c(r.h) && c(r.w) && c(r.b) && ({ h: l, w: a, b: i } = r, l = u(l, 360), a = u(a, 100), i = u(i, 100), t = X(l, a, i), w = \"hwb\"), c(r.a) && (e = r.a, e = R(e) || parseFloat(`${e}`) > 1 ? u(e, 100) : e), {\n    r: t.r,\n    g: t.g,\n    b: t.b,\n    a: M(e),\n    format: w,\n    ok: S\n  };\n}, sr = \"1.0.8\";\nclass W {\n  // bring main utilities to front\n  static matchers = f;\n  static isOnePointZero = Z;\n  static isPercentage = R;\n  static isValidCSSUnit = c;\n  static isNonColor = V;\n  static isColorName = J;\n  static isColorType = k;\n  static pad2 = p;\n  static clamp01 = x;\n  static bound01 = u;\n  static boundAlpha = M;\n  static getRGBFromName = K;\n  static convertHexToDecimal = E;\n  static convertDecimalToHex = Q;\n  static rgbToHsl = _;\n  static rgbToHex = j;\n  static rgbToHsv = P;\n  static rgbToHwb = G;\n  static rgbaToHex = C;\n  static hslToRgb = I;\n  static hsvToRgb = I;\n  static hueToRgb = H;\n  static hwbToRgb = X;\n  static parseIntFromHex = h;\n  static stringInputToObject = Y;\n  static inputToRGB = q;\n  static roundPart = b;\n  static webColors = T;\n  static nonColors = N;\n  static version = sr;\n  // main public properties\n  r;\n  g;\n  b;\n  a;\n  format;\n  ok;\n  originalInput;\n  // main public methods\n  constructor(t, r) {\n    const e = r && z.includes(r) ? r : \"\", { r: s, g: n, b: g, a, ok: i, format: l } = q(t);\n    this.originalInput = t, this.r = s, this.g = n, this.b = g, this.a = a, this.ok = i, this.format = e || l;\n  }\n  /**\n   * Checks if the current input value is a valid colour.\n   */\n  get isValid() {\n    return this.ok;\n  }\n  /**\n   * Checks if the current colour requires a light text colour.\n   */\n  get isDark() {\n    return this.brightness < 120;\n  }\n  /**\n   * Returns the perceived luminance of a colour.\n   *\n   * @see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n   */\n  get luminance() {\n    const { r: t, g: r, b: e } = this;\n    let s = 0, n = 0, g = 0;\n    return t <= 0.03928 ? s = t / 12.92 : s = ((t + 0.055) / 1.055) ** 2.4, r <= 0.03928 ? n = r / 12.92 : n = ((r + 0.055) / 1.055) ** 2.4, e <= 0.03928 ? g = e / 12.92 : g = ((e + 0.055) / 1.055) ** 2.4, 0.2126 * s + 0.7152 * n + 0.0722 * g;\n  }\n  /**\n   * Returns the perceived brightness of the colour.\n   */\n  get brightness() {\n    const { r: t, g: r, b: e } = this.toRgb();\n    return (t * 299 + r * 587 + e * 114) / 1e3;\n  }\n  /**\n   * Returns the web colour name closest to the current colour.\n   */\n  get name() {\n    const { r: t, g: r, b: e } = this.toRgb(), [s] = T.map(([n, g]) => {\n      const a = (\n        // ((rgb.r - r) ** 2 + (rgb.g - g) ** 2 + (rgb.b - b) ** 2) ** 0.5; // standard\n        (((g.r - t) * 0.3) ** 2 + ((g.g - r) * 0.6) ** 2 + ((g.b - e) * 0.1) ** 2) ** 0.5\n      );\n      return [n, a];\n    }).find(([, n], g, a) => n === Math.min(...a.map(([, i]) => i)));\n    return s;\n  }\n  /**\n   * Returns the colour as an RGBA object.\n   */\n  toRgb() {\n    let { r: t, g: r, b: e, a: s } = this;\n    return [t, r, e] = [t, r, e].map((n) => b(n * 255 * 100) / 100), s = b(s * 100) / 100, {\n      r: t,\n      g: r,\n      b: e,\n      a: s\n    };\n  }\n  /**\n   * Returns the RGBA values concatenated into a CSS3 Module string format.\n   * * rgb(255,255,255)\n   * * rgba(255,255,255,0.5)\n   */\n  toRgbString() {\n    const { r: t, g: r, b: e, a: s } = this.toRgb(), [n, g, a] = [t, r, e].map(b);\n    return s === 1 ? `rgb(${n}, ${g}, ${a})` : `rgba(${n}, ${g}, ${a}, ${s})`;\n  }\n  /**\n   * Returns the RGBA values concatenated into a CSS4 Module string format.\n   * * rgb(255 255 255)\n   * * rgb(255 255 255 / 50%)\n   */\n  toRgbCSS4String() {\n    const { r: t, g: r, b: e, a: s } = this.toRgb(), [n, g, a] = [t, r, e].map(b), i = s === 1 ? \"\" : ` / ${b(s * 100)}%`;\n    return `rgb(${n} ${g} ${a}${i})`;\n  }\n  /**\n   * Returns the hexadecimal value of the colour. When the parameter is *true*\n   * it will find a 3 characters shorthand of the decimal value.\n   */\n  toHex(t) {\n    const { r, g: e, b: s, a: n } = this.toRgb();\n    return n === 1 ? j(r, e, s, t) : C(r, e, s, n, t);\n  }\n  /**\n   * Returns the CSS valid hexadecimal vaue of the colour. When the parameter is *true*\n   * it will find a 3 characters shorthand of the value.\n   */\n  toHexString(t) {\n    return `#${this.toHex(t)}`;\n  }\n  /**\n   * Returns the HEX8 value of the colour.\n   */\n  toHex8(t) {\n    const { r, g: e, b: s, a: n } = this.toRgb();\n    return C(r, e, s, n, t);\n  }\n  /**\n   * Returns the HEX8 value of the colour.\n   */\n  toHex8String(t) {\n    return `#${this.toHex8(t)}`;\n  }\n  /**\n   * Returns the colour as a HSVA object.\n   */\n  toHsv() {\n    const { r: t, g: r, b: e, a: s } = this, { h: n, s: g, v: a } = P(t, r, e);\n    return {\n      h: n,\n      s: g,\n      v: a,\n      a: s\n    };\n  }\n  /**\n   * Returns the colour as an HSLA object.\n   */\n  toHsl() {\n    const { r: t, g: r, b: e, a: s } = this, { h: n, s: g, l: a } = _(t, r, e);\n    return {\n      h: n,\n      s: g,\n      l: a,\n      a: s\n    };\n  }\n  /**\n   * Returns the HSLA values concatenated into a CSS3 Module format string.\n   * * `hsl(150, 100%, 50%)`\n   * * `hsla(150, 100%, 50%, 0.5)`\n   */\n  toHslString() {\n    let { h: t, s: r, l: e, a: s } = this.toHsl();\n    return t = b(t * 360), r = b(r * 100), e = b(e * 100), s = b(s * 100) / 100, s === 1 ? `hsl(${t}, ${r}%, ${e}%)` : `hsla(${t}, ${r}%, ${e}%, ${s})`;\n  }\n  /**\n   * Returns the HSLA values concatenated into a CSS4 Module format string.\n   * * `hsl(150deg 100% 50%)`\n   * * `hsl(150deg 100% 50% / 50%)`\n   */\n  toHslCSS4String() {\n    let { h: t, s: r, l: e, a: s } = this.toHsl();\n    t = b(t * 360), r = b(r * 100), e = b(e * 100), s = b(s * 100);\n    const n = s < 100 ? ` / ${b(s)}%` : \"\";\n    return `hsl(${t}deg ${r}% ${e}%${n})`;\n  }\n  /**\n   * Returns the colour as an HWBA object.\n   */\n  toHwb() {\n    const { r: t, g: r, b: e, a: s } = this, { h: n, w: g, b: a } = G(t, r, e);\n    return {\n      h: n,\n      w: g,\n      b: a,\n      a: s\n    };\n  }\n  /**\n   * Returns the HWBA values concatenated into a string.\n   */\n  toHwbString() {\n    let { h: t, w: r, b: e, a: s } = this.toHwb();\n    t = b(t * 360), r = b(r * 100), e = b(e * 100), s = b(s * 100);\n    const n = s < 100 ? ` / ${b(s)}%` : \"\";\n    return `hwb(${t}deg ${r}% ${e}%${n})`;\n  }\n  /**\n   * Sets the alpha value of the current colour.\n   */\n  setAlpha(t) {\n    return typeof t != \"number\" ? this : (this.a = M(t), this);\n  }\n  /**\n   * Saturate the colour with a given amount.\n   */\n  saturate(t) {\n    if (typeof t != \"number\")\n      return this;\n    const { h: r, s: e, l: s } = this.toHsl(), { r: n, g, b: a } = y(r, x(e + t / 100), s);\n    return Object.assign(this, { r: n, g, b: a }), this;\n  }\n  /**\n   * Desaturate the colour with a given amount.\n   */\n  desaturate(t) {\n    return typeof t == \"number\" ? this.saturate(-t) : this;\n  }\n  /**\n   * Completely desaturates a colour into greyscale.\n   * Same as calling `desaturate(100)`\n   */\n  greyscale() {\n    return this.saturate(-100);\n  }\n  /**\n   * Increase the colour lightness with a given amount.\n   */\n  lighten(t) {\n    if (typeof t != \"number\")\n      return this;\n    const { h: r, s: e, l: s } = this.toHsl(), { r: n, g, b: a } = y(r, e, x(s + t / 100));\n    return Object.assign(this, { r: n, g, b: a }), this;\n  }\n  /**\n   * Decrease the colour lightness with a given amount.\n   */\n  darken(t) {\n    return typeof t == \"number\" ? this.lighten(-t) : this;\n  }\n  /**\n   * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n   * Values outside of this range will be wrapped into this range.\n   */\n  spin(t) {\n    if (typeof t != \"number\")\n      return this;\n    const { h: r, s: e, l: s } = this.toHsl(), { r: n, g, b: a } = y(x((r * 360 + t) % 360 / 360), e, s);\n    return Object.assign(this, { r: n, g, b: a }), this;\n  }\n  /** Returns a clone of the current `Color` instance. */\n  clone() {\n    return new W(this);\n  }\n  /**\n   * Returns the colour value in CSS valid string format.\n   */\n  toString(t) {\n    const { format: r } = this;\n    return r === \"hex\" ? this.toHexString(t) : r === \"hsl\" ? this.toHslString() : r === \"hwb\" ? this.toHwbString() : this.toRgbString();\n  }\n}\nexport {\n  W as default\n};\n//# sourceMappingURL=index.mjs.map\n","import Color from '@thednp/color';\n// import { isNumber } from '@thednp/shorty';\n\n/**\n * Returns a color palette with a given set of parameters.\n *\n * @example\n * new ColorPalette(0, 12, 10, 80);\n * // => { hue: 0, hueSteps: 12, lightSteps: 10, saturation: 80, colors: Array<Color> }\n */\nexport default class ColorPalette {\n  public static Color = Color;\n  hue: number;\n  hueSteps: number;\n  lightSteps: number;\n  saturation: number;\n  colors: Color[];\n  /**\n   * The `hue` parameter is optional, which would be set to 0.\n   * * `args.hue` the starting Hue [0, 360]\n   * * `args.hueSteps` Hue Steps Count [5, 24]\n   * * `args.lightSteps` Lightness Steps Count [5, 12]\n   * * `args.saturation` Saturation [0, 100]\n   */\n  constructor(...args: [number?, number?, number?, number?]) {\n    let hue = 0;\n    let hueSteps = 12;\n    let lightSteps = 10;\n    let lightnessArray = [0.5];\n    let saturation = 100;\n    // if (!args.every(n => isNumber(n))) throw TypeError('ColorPalette only accepts numbers.');\n\n    if (args.length === 4) {\n      [hue, hueSteps, lightSteps, saturation] = args as [number, number, number, number];\n    } else if (args.length === 3) {\n      [hue, hueSteps, lightSteps] = args as [number, number, number];\n    } else if (args.length === 2) {\n      [hueSteps, lightSteps] = args as [number, number];\n      if ([hueSteps, lightSteps].some(n => n < 1)) {\n        throw TypeError('ColorPalette: the two minimum arguments must be numbers higher than 0.');\n      }\n    }\n\n    const colors: Color[] = [];\n    const hueStep = 360 / hueSteps;\n    const half = Color.roundPart((lightSteps - (lightSteps % 2 ? 1 : 0)) / 2);\n    const steps1To13 = [0.25, 0.2, 0.15, 0.11, 0.09, 0.075];\n    const lightSets = [\n      [1, 2, 3],\n      [4, 5],\n      [6, 7],\n      [8, 9],\n      [10, 11],\n      [12, 13],\n    ];\n    const closestSet = lightSets.find(set => set.includes(lightSteps));\n\n    // find a lightStep that won't go beyond black and white\n    // something within the [10-90] range of lightness\n    const lightStep = closestSet\n      ? steps1To13[lightSets.indexOf(closestSet)]\n      : 100 / (lightSteps + (lightSteps % 2 ? 0 : 1)) / 100;\n\n    // light tints\n    for (let i = 1; i < half + 1; i += 1) {\n      lightnessArray = [...lightnessArray, 0.5 + lightStep * i];\n    }\n\n    // dark tints\n    for (let i = 1; i < lightSteps - half; i += 1) {\n      lightnessArray = [0.5 - lightStep * i, ...lightnessArray];\n    }\n\n    // feed `colors` Array\n    for (let i = 0; i < hueSteps; i += 1) {\n      const currentHue = ((hue + i * hueStep) % 360) / 360;\n      lightnessArray.forEach(l => {\n        const newColor = new Color({ h: currentHue, s: 1, l });\n        colors.push(saturation < 100 ? newColor.saturate(saturation - 100) : newColor);\n      });\n    }\n\n    this.hue = hue;\n    this.hueSteps = hueSteps;\n    this.lightSteps = lightSteps;\n    this.saturation = saturation;\n    this.colors = colors;\n  }\n}\n","import ColorPickerLabels from '../interface/colorPickerLabels';\n\n/** The labels presented to the user. */\nconst colorPickerLabels: ColorPickerLabels = {\n  pickerLabel: 'Colour Picker',\n  appearanceLabel: 'Colour Appearance',\n  valueLabel: 'Colour Value',\n  toggleLabel: 'Select Colour',\n  presetsLabel: 'Colour Presets',\n  defaultsLabel: 'Colour Defaults',\n  formatLabel: 'Format',\n  alphaLabel: 'Alpha',\n  hexLabel: 'Hexadecimal',\n  hueLabel: 'Hue',\n  whitenessLabel: 'Whiteness',\n  blacknessLabel: 'Blackness',\n  saturationLabel: 'Saturation',\n  lightnessLabel: 'Lightness',\n  redLabel: 'Red',\n  greenLabel: 'Green',\n  blueLabel: 'Blue',\n};\n\nexport default colorPickerLabels;\n","/** A list of 17 color names used for WAI-ARIA compliance. */\nconst colorNames: string[] = [\n  'white',\n  'black',\n  'grey',\n  'red',\n  'orange',\n  'brown',\n  'gold',\n  'olive',\n  'yellow',\n  'lime',\n  'green',\n  'teal',\n  'cyan',\n  'blue',\n  'violet',\n  'magenta',\n  'pink',\n];\nexport default colorNames;\n","import { isString } from '@thednp/shorty';\n\n/**\n * Check if a string is valid JSON string.\n *\n * @param str the string input\n * @returns the query result\n */\nconst isValidJSON = (str: unknown): str is string => {\n  if (!isString(str)) return false;\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport default isValidJSON;\n","const vHidden = 'v-hidden';\nexport default vHidden;\n","import { createElement, setAttribute, ObjectAssign, toUpperCase } from '@thednp/shorty';\n\nimport vHidden from './vHidden';\nimport ColorPicker from '../index';\n\n/**\n * Returns the color form for `ColorPicker`.\n *\n * @param self the `ColorPicker` instance\n * @returns a new `<div>` element with color component `<input>`\n */\nconst getColorForm = (self: ColorPicker): HTMLElement => {\n  const { format, id, componentLabels } = self;\n  const colorForm = createElement({\n    tagName: 'div',\n    className: `color-form ${format}`,\n  }) as HTMLElement;\n\n  let components = ['hex'];\n  if (format === 'rgb') components = ['red', 'green', 'blue', 'alpha'];\n  else if (format === 'hsl') components = ['hue', 'saturation', 'lightness', 'alpha'];\n  else if (format === 'hwb') components = ['hue', 'whiteness', 'blackness', 'alpha'];\n\n  components.forEach((c: string): void => {\n    const [C] = format === 'hex' ? ['#'] : toUpperCase(c).split('');\n    const cID = `color_${format}_${c}_${id}`;\n    const formatLabel = componentLabels[`${c}Label`];\n    const cInputLabel = createElement({ tagName: 'label' }) as HTMLElement;\n    setAttribute(cInputLabel, 'for', cID);\n    cInputLabel.append(\n      createElement({\n        tagName: 'span',\n        ariaHidden: 'true',\n        innerText: `${C}:`,\n      }) as HTMLElement,\n      createElement({\n        tagName: 'span',\n        className: vHidden,\n        innerText: formatLabel,\n      }) as HTMLElement,\n    );\n    const cInput = createElement({\n      tagName: 'input',\n      id: cID,\n      // name: cID, - prevent saving the value to a form\n      type: format === 'hex' ? 'text' : 'number',\n      value: c === 'alpha' ? '100' : '0',\n      className: `color-input ${c}`,\n      autocomplete: 'off',\n      spellcheck: false,\n    } as Partial<HTMLInputElement>) as HTMLInputElement;\n\n    // alpha\n    let max = '100';\n    let step = '1';\n    if (c !== 'alpha') {\n      if (format === 'rgb') {\n        max = '255';\n        step = '1';\n      } else if (c === 'hue') {\n        max = '360';\n        step = '1';\n      }\n    }\n    ObjectAssign(cInput, {\n      min: '0',\n      max,\n      step,\n    });\n    colorForm.append(cInputLabel, cInput);\n  });\n  return colorForm;\n};\n\nexport default getColorForm;\n","import { createElement } from '@thednp/shorty';\n\nimport ColorPicker from '..';\n\n/**\n * Returns all color controls for `ColorPicker`.\n *\n * @param self the `ColorPicker` instance\n * @returns color controls\n */\nconst getColorControls = (self: ColorPicker): HTMLElement => {\n  const { format, componentLabels } = self;\n  const { hueLabel, alphaLabel, lightnessLabel, saturationLabel, whitenessLabel, blacknessLabel } = componentLabels;\n\n  const max1 = format === 'hsl' ? 360 : 100;\n  const max2 = format === 'hsl' ? 100 : 360;\n  const max3 = 100;\n\n  let ctrl1Label = format === 'hsl' ? `${hueLabel} & ${lightnessLabel}` : `${lightnessLabel} & ${saturationLabel}`;\n\n  ctrl1Label = format === 'hwb' ? `${whitenessLabel} & ${blacknessLabel}` : ctrl1Label;\n\n  const ctrl2Label = format === 'hsl' ? `${saturationLabel}` : `${hueLabel}`;\n\n  const colorControls = createElement({\n    tagName: 'div',\n    className: `color-controls ${format}`,\n  }) as HTMLElement;\n\n  const colorPointer = 'color-pointer';\n  const colorSlider = 'color-slider';\n\n  const controls = [\n    {\n      i: 1,\n      c: colorPointer,\n      l: ctrl1Label,\n      min: 0,\n      max: max1,\n    },\n    {\n      i: 2,\n      c: colorSlider,\n      l: ctrl2Label,\n      min: 0,\n      max: max2,\n    },\n    {\n      i: 3,\n      c: colorSlider,\n      l: alphaLabel,\n      min: 0,\n      max: max3,\n    },\n  ];\n\n  controls.forEach(template => {\n    const { i, c, l, min, max } = template;\n    const control = createElement({\n      tagName: 'div',\n      className: 'color-control',\n      role: 'presentation',\n    }) as HTMLElement;\n\n    control.append(\n      createElement({\n        tagName: 'div',\n        className: `visual-control visual-control${i}`,\n      }) as HTMLElement,\n    );\n\n    const knob = createElement({\n      tagName: 'div',\n      className: `${c} knob`,\n      ariaLive: 'polite',\n      ariaLabel: l,\n      role: 'slider',\n      tabIndex: 0,\n      ariaValueMin: `${min}`,\n      ariaValueMax: `${max}`,\n    }) as HTMLElement;\n\n    control.append(knob);\n    colorControls.append(control);\n  });\n\n  return colorControls;\n};\n\nexport default getColorControls;\n","import { setAttribute, getAttribute, createElement, setElementStyle } from '@thednp/shorty';\n\nimport Color from '@thednp/color';\nimport ColorPalette from '../colorPalette';\nimport ColorPicker from '../index';\n\n/**\n * Returns a color-defaults with given values and class.\n */\nconst getColorMenu = (self: ColorPicker, colorsSource: ColorPalette | string[], menuClass: string): HTMLElement => {\n  const { input, format, componentLabels } = self;\n  const { defaultsLabel, presetsLabel } = componentLabels;\n  const isOptionsMenu = menuClass === 'color-options';\n  const isPalette = colorsSource instanceof ColorPalette;\n  const menuLabel = isOptionsMenu ? presetsLabel : defaultsLabel;\n  const colorsArray = isPalette ? colorsSource.colors : colorsSource;\n  const colorsCount = colorsArray.length;\n  const { lightSteps } = isPalette ? colorsSource : { lightSteps: null };\n  const fit = lightSteps || [9, 10].find(x => colorsCount >= x * 2 && !(colorsCount % x)) || 5;\n  const isMultiLine = isOptionsMenu && colorsCount > fit;\n  let rowCountHover = 2;\n  rowCountHover = isMultiLine && colorsCount > fit * 2 ? 3 : rowCountHover;\n  rowCountHover = isMultiLine && colorsCount > fit * 3 ? 4 : rowCountHover;\n  rowCountHover = isMultiLine && colorsCount > fit * 4 ? 5 : rowCountHover;\n  const rowCount = rowCountHover - (colorsCount <= fit * 3 ? 1 : 2);\n  const isScrollable = isMultiLine && colorsCount > rowCount * fit;\n  let finalClass = menuClass;\n  finalClass += isScrollable ? ' scrollable' : '';\n  finalClass += isMultiLine ? ' multiline' : '';\n  const gap = isMultiLine ? '1px' : '0.25rem';\n  let optionSize = isMultiLine ? 1.75 : 2;\n  optionSize = fit > 5 && isMultiLine ? 1.5 : optionSize;\n  const menuHeight = `${rowCount * optionSize}rem`;\n  const menuHeightHover = `calc(${rowCountHover} * ${optionSize}rem + ${rowCountHover - 1} * ${gap})`;\n\n  // <UL> is an `HTMLElement`\n  const menu = createElement({\n    tagName: 'ul',\n    className: finalClass,\n    role: 'listbox',\n    ariaLabel: menuLabel,\n  }) as HTMLElement;\n\n  if (isScrollable) {\n    setElementStyle(menu, {\n      '--grid-item-size': `${optionSize}rem`,\n      '--grid-fit': `${fit}`,\n      '--grid-gap': gap,\n      '--grid-height': menuHeight,\n      '--grid-hover-height': menuHeightHover,\n    });\n  }\n\n  colorsArray.forEach(x => {\n    let [value, label] = typeof x === 'string' ? x.trim().split(':') : [];\n    if (x instanceof Color) {\n      value = x.toHexString();\n      label = value;\n    }\n    const color = new Color(x instanceof Color ? x : value, format);\n    const isActive = color.toString() === getAttribute(input, 'value');\n    const active = isActive ? ' active' : '';\n\n    const option = createElement({\n      tagName: 'li',\n      className: `color-option${active}`,\n      innerText: `${label || value}`,\n      tabIndex: 0,\n      role: 'option',\n      ariaSelected: isActive ? 'true' : 'false',\n    }) as HTMLElement;\n    setAttribute(option, 'data-value', `${value}`);\n\n    if (isOptionsMenu) {\n      setElementStyle(option, { backgroundColor: value });\n    }\n\n    menu.append(option);\n  });\n  return menu;\n};\n\nexport default getColorMenu;\n","import {\n  getAttribute,\n  setAttribute,\n  toUpperCase,\n  ariaHidden,\n  tabindex,\n  createElement,\n  createElementNS,\n} from '@thednp/shorty';\n\nimport Color from '@thednp/color';\n\nimport getColorForm from './getColorForm';\nimport getColorControls from './getColorControls';\nimport getColorMenu from './getColorMenu';\nimport vHidden from './vHidden';\n\nimport ColorPicker from '../index';\n\n/**\n * Generate HTML markup and update instance properties.\n *\n * @param self\n */\nconst setMarkup = (self: ColorPicker) => {\n  const { input, parent, format, id, componentLabels, colorKeywords, colorPresets } = self;\n  const colorValue = getAttribute(input, 'value') || '#fff';\n  const { nonColors } = Color;\n\n  const { toggleLabel, pickerLabel, formatLabel, hexLabel } = componentLabels;\n\n  // update color\n  const color = nonColors.includes(colorValue) ? '#fff' : colorValue;\n  self.color = new Color(color, format);\n\n  // set initial controls dimensions\n  const formatString = format === 'hex' ? hexLabel : toUpperCase(format);\n\n  const pickerBtn = createElement<HTMLButtonElement>({\n    id: `picker-btn-${id}`,\n    tagName: 'button',\n    type: 'button',\n    className: 'picker-toggle btn-appearance',\n    ariaExpanded: 'false',\n    ariaHasPopup: 'true',\n  }) as HTMLButtonElement;\n\n  pickerBtn.append(\n    createElement({\n      tagName: 'span',\n      className: vHidden,\n      innerText: `${pickerLabel}. ${formatLabel}: ${formatString}`,\n    }) as HTMLElement,\n  );\n\n  const pickerDropdown = createElement({\n    tagName: 'div',\n    className: 'color-dropdown picker',\n    role: 'group',\n    ariaLabelledBy: `picker-btn-${id}`,\n  } as Partial<HTMLElement> & { ariaLabelledBy: string }) as HTMLElement;\n\n  const colorControls = getColorControls(self);\n  const colorForm = getColorForm(self);\n\n  pickerDropdown.append(colorControls, colorForm);\n  input.before(pickerBtn);\n  parent.append(pickerDropdown);\n\n  // set colour key menu template\n  if (colorKeywords || colorPresets) {\n    const presetsDropdown = createElement({\n      tagName: 'div',\n      className: 'color-dropdown scrollable menu',\n    }) as HTMLElement;\n\n    // color presets\n    if (colorPresets) {\n      presetsDropdown.append(getColorMenu(self, colorPresets, 'color-options'));\n    }\n\n    // explicit defaults [reset, initial, inherit, transparent, currentColor]\n    // also custom defaults [default: #069, complementary: #930]\n    if (colorKeywords && colorKeywords.length) {\n      presetsDropdown.append(getColorMenu(self, colorKeywords, 'color-defaults'));\n    }\n\n    const presetsBtn = createElement<HTMLButtonElement>({\n      tagName: 'button',\n      type: 'button',\n      className: 'menu-toggle btn-appearance',\n      tabIndex: -1,\n      ariaExpanded: 'false',\n      ariaHasPopup: 'true',\n    }) as HTMLButtonElement;\n\n    const xmlns = encodeURI('http://www.w3.org/2000/svg');\n    const presetsIcon = createElementNS(xmlns, {\n      tagName: 'svg',\n    }) as HTMLElement;\n    setAttribute(presetsIcon, 'xmlns', xmlns);\n    setAttribute(presetsIcon, 'viewBox', '0 0 512 512');\n    setAttribute(presetsIcon, ariaHidden, 'true');\n\n    const path = createElementNS(xmlns, {\n      tagName: 'path',\n    }) as HTMLElement;\n    setAttribute(path, 'd', 'M98,158l157,156L411,158l27,27L255,368L71,185L98,158z');\n    setAttribute(path, 'fill', '#fff');\n    presetsIcon.append(path);\n    presetsBtn.append(\n      createElement({\n        tagName: 'span',\n        className: vHidden,\n        innerText: `${toggleLabel}`,\n      }) as HTMLElement,\n      presetsIcon,\n    );\n\n    parent.append(presetsBtn, presetsDropdown);\n  }\n\n  // solve non-colors after settings save\n  if (colorKeywords && nonColors.includes(colorValue)) {\n    self.value = colorValue;\n  }\n  setAttribute(input, tabindex, '-1');\n};\n\nexport default setMarkup;\n","import {\n  ariaDescription,\n  ariaSelected,\n  ariaValueNow,\n  ariaValueText,\n  ariaExpanded,\n  keyArrowDown,\n  keyArrowUp,\n  keyArrowLeft,\n  keyArrowRight,\n  keyEnter,\n  keySpace,\n  keyEscape,\n  focusinEvent,\n  mouseclickEvent,\n  keydownEvent,\n  changeEvent,\n  touchmoveEvent,\n  pointerdownEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  tabindex,\n  focusoutEvent,\n  resizeEvent,\n  keyupEvent,\n  scrollEvent,\n  dispatchEvent,\n  getElementsByClassName,\n  closest,\n  querySelector,\n  getElementTransitionDuration,\n  getBoundingClientRect,\n  getUID,\n  getElementStyle,\n  getDocumentElement,\n  getDocument,\n  ObjectAssign,\n  ObjectFromEntries,\n  Data,\n  getInstance,\n  setElementStyle,\n  normalizeOptions,\n  reflow,\n  focus,\n  hasClass,\n  addClass,\n  removeClass,\n  setAttribute,\n  getAttribute,\n  removeAttribute,\n  isArray,\n  isString,\n  getWindow,\n  on,\n  off,\n} from '@thednp/shorty';\n\n// ColorPicker Util\n// ================\nimport Color from '@thednp/color';\nimport type { RGBA, HWBA, HSLA, HSVA } from '@thednp/color';\n\nimport ColorPalette from './colorPalette';\nimport colorPickerLabels from './util/colorPickerLabels';\nimport colorNames from './util/colorNames';\nimport isValidJSON from './util/isValidJSON';\nimport setMarkup from './util/setMarkup';\n\nimport ColorPickerOptions from './interface/colorPickerOptions';\nimport ColorPickerLabels from './interface/colorPickerLabels';\nimport type ColorNames from './interface/ColorNames';\nimport { version } from '../../package.json';\n\n// ColorPicker GC\n// ==============\nconst colorPickerString = 'color-picker';\nconst colorPickerSelector = `[data-function=\"${colorPickerString}\"]`;\nconst colorPickerParentSelector = `.${colorPickerString}`;\nconst colorPickerDefaults: ColorPickerOptions = {\n  componentLabels: colorPickerLabels,\n  colorLabels: colorNames,\n  format: 'rgb',\n  colorPresets: false,\n  colorKeywords: false,\n};\nconst { roundPart, nonColors } = Color;\n\n// ColorPicker Static Methods\n// ==========================\nconst getColorPickerInstance = (element: HTMLInputElement) => getInstance<ColorPicker>(element, colorPickerString);\nconst initColorPicker = (element: HTMLInputElement) => new ColorPicker(element);\n\n// ColorPicker Private Methods\n// ===========================\n\n/**\n * Add / remove `ColorPicker` main event listeners.\n */\nconst toggleEvents = (self: ColorPicker, action?: boolean) => {\n  const fn = action ? on : off;\n  const { input, pickerToggle, menuToggle } = self;\n\n  fn(input, focusinEvent, self.showPicker);\n  fn(pickerToggle, mouseclickEvent, self.togglePicker);\n\n  if (menuToggle) {\n    fn(menuToggle, mouseclickEvent, self.toggleMenu);\n  }\n};\n\n/**\n * Add / remove `ColorPicker` event listeners active only when open.\n */\nconst toggleEventsOnShown = (self: ColorPicker, action?: boolean) => {\n  const fn = action ? on : off;\n  const { input, colorMenu, parent } = self;\n  const doc = getDocument(input);\n  const win = getWindow(doc);\n\n  fn(self.controls, pointerdownEvent, self.pointerDown as EventListener);\n  self.controlKnobs.forEach(x => fn(x, keydownEvent, self.handleKnobs as EventListener));\n\n  fn(win, scrollEvent, self.handleScroll);\n  fn(win, resizeEvent, self.update);\n\n  [input, ...self.inputs].forEach(x => fn(x, changeEvent, self.changeHandler));\n\n  if (colorMenu) {\n    fn(colorMenu, mouseclickEvent, self.menuClickHandler);\n    fn(colorMenu, keydownEvent, self.menuKeyHandler as EventListener);\n  }\n\n  fn(doc, pointermoveEvent, self.pointerMove as EventListener);\n  fn(doc, pointerupEvent, self.pointerUp as EventListener);\n  fn(parent, focusoutEvent, self.handleFocusOut as EventListener);\n  fn(doc, keyupEvent, self.handleDismiss as EventListener);\n};\n\n/**\n * Triggers the `ColorPicker` original event.\n */\nconst firePickerChange = (self: ColorPicker) => {\n  dispatchEvent(self.input, new CustomEvent('colorpicker.change'));\n};\n\n/**\n * Hides a visible dropdown.\n */\nconst removePosition = (element: HTMLElement) => {\n  /* istanbul ignore else */\n  if (element) {\n    ['bottom', 'top'].forEach(x => removeClass(element, x));\n  }\n};\n\n/**\n * Shows a `ColorPicker` dropdown and close the curent open dropdown.\n */\nconst showDropdown = (self: ColorPicker, dropdown: HTMLElement) => {\n  const { colorPicker, colorMenu, menuToggle, pickerToggle, parent } = self;\n  const isPicker = dropdown === colorPicker;\n  const openDropdown = isPicker ? colorMenu : colorPicker;\n  const activeBtn = isPicker ? menuToggle : pickerToggle;\n  const nextBtn = !isPicker ? menuToggle : pickerToggle;\n\n  if (!hasClass(parent, 'open')) {\n    addClass(parent, 'open');\n  }\n  if (openDropdown) {\n    removeClass(openDropdown, 'show');\n    removePosition(openDropdown);\n  }\n  addClass(dropdown, 'bottom');\n  reflow(dropdown);\n  addClass(dropdown, 'show');\n\n  if (isPicker) self.update();\n\n  if (!self.isOpen) {\n    toggleEventsOnShown(self, true);\n    self.updateDropdownPosition();\n    self.isOpen = true;\n    setAttribute(self.input, tabindex, '0');\n    if (menuToggle) {\n      setAttribute(menuToggle, tabindex, '0');\n    }\n  }\n\n  setAttribute(nextBtn, ariaExpanded, 'true');\n  if (activeBtn) {\n    setAttribute(activeBtn, ariaExpanded, 'false');\n  }\n};\n\n/**\n * Color Picker Web Component\n *\n * @see http://thednp.github.io/color-picker\n */\nexport default class ColorPicker {\n  // bring utils to staic\n  public static Color = Color;\n  public static ColorPalette = ColorPalette;\n  public static getInstance = getColorPickerInstance;\n  public static init = initColorPicker;\n  public static selector = colorPickerSelector;\n  // utils important for render\n  public static roundPart = roundPart;\n  public static setElementStyle = setElementStyle;\n  public static setAttribute = setAttribute;\n  public static getBoundingClientRect = getBoundingClientRect;\n  public static version = version;\n  public static colorNames = colorNames;\n  public static colorPickerLabels = colorPickerLabels;\n\n  id: number;\n  input: HTMLInputElement;\n  color: Color;\n  format = 'rgb';\n  parent: HTMLElement;\n  dragElement: HTMLElement | undefined;\n  isOpen = false;\n  controlPositions: {\n    c1x: number;\n    c1y: number;\n    c2y: number;\n    c3y: number;\n  };\n  colorLabels: ColorNames = ObjectFromEntries(colorNames.map(c => [c, c])) as ColorNames;\n  colorKeywords: string[] | false;\n  colorPresets: ColorPalette | string[] | false;\n  componentLabels: ColorPickerLabels;\n  pickerToggle: HTMLElement;\n  menuToggle: HTMLElement;\n  colorPicker: HTMLElement;\n  colorMenu: HTMLElement;\n  controls: HTMLElement;\n  inputs: HTMLInputElement[];\n  controlKnobs: HTMLElement[];\n  visuals: HTMLElement[];\n\n  /**\n   * Returns a new `ColorPicker` instance. The target of this constructor\n   * must be an `HTMLInputElement`.\n   *\n   * @param target the target `<input>` element\n   * @param config instance options\n   */\n  constructor(target: (HTMLElement & HTMLInputElement) | string, config?: Partial<ColorPickerOptions>) {\n    const input = querySelector(target) as HTMLInputElement;\n\n    // invalidate\n    if (typeof target === 'undefined') throw new TypeError(`ColorPicker target not specified.`);\n    if (isString(target) && !input) throw new TypeError(`ColorPicker target \"${target}\" cannot be found.`);\n    this.input = input;\n\n    const parent = closest(input, colorPickerParentSelector);\n    if (!parent) throw new TypeError('ColorPicker requires a specific markup to work.');\n\n    this.parent = parent;\n    this.id = getUID(input, colorPickerString);\n    this.dragElement = undefined;\n    this.isOpen = false;\n    this.controlPositions = {\n      c1x: 0,\n      c1y: 0,\n      c2y: 0,\n      c3y: 0,\n    };\n    // this.colorLabels = {};\n    this.colorKeywords = false;\n    this.colorPresets = false;\n\n    // process options\n    const { format, componentLabels, colorLabels, colorKeywords, colorPresets } = normalizeOptions(\n      input,\n      colorPickerDefaults,\n      config || {},\n    );\n\n    let translatedColorLabels = colorNames;\n    /* istanbul ignore else */\n    if (isArray(colorLabels) && colorLabels.length === 17) {\n      translatedColorLabels = colorLabels;\n    } else if (isString(colorLabels) && colorLabels.split(',').length === 17) {\n      translatedColorLabels = colorLabels.split(',');\n    }\n\n    // expose colour labels to all methods\n    ObjectAssign(this.colorLabels, ObjectFromEntries(translatedColorLabels.map((c, i) => [colorNames[i], c])));\n\n    // update and expose component labels\n    const tempComponentLabels =\n      isString(componentLabels) && isValidJSON(componentLabels)\n        ? (JSON.parse(componentLabels) as ColorPickerLabels)\n        : componentLabels;\n    this.componentLabels = ObjectAssign({ ...colorPickerLabels }, tempComponentLabels);\n    this.color = new Color(input.value || '#fff', format);\n    this.format = format;\n\n    // set colour defaults\n    if (isArray(colorKeywords) && colorKeywords.length) {\n      this.colorKeywords = colorKeywords;\n    } else if (isString(colorKeywords) && colorKeywords.length) {\n      this.colorKeywords = colorKeywords.split(',').map(x => x.trim());\n    }\n\n    // set colour presets\n    if (isArray(colorPresets) && colorPresets.length) {\n      this.colorPresets = colorPresets;\n    } else if (colorPresets && isValidJSON(colorPresets)) {\n      const { hue, hueSteps, lightSteps, saturation } = JSON.parse(colorPresets) as {\n        hue: number;\n        hueSteps: number;\n        lightSteps: number;\n        saturation: number;\n      };\n      this.colorPresets = new ColorPalette(hue, hueSteps, lightSteps, saturation);\n    } else if (isString(colorPresets)) {\n      this.colorPresets = colorPresets.split(',').map((x: string) => x.trim());\n    }\n\n    // generate markup\n    setMarkup(this);\n\n    const [colorPicker, colorMenu] = getElementsByClassName('color-dropdown', parent);\n    // set main elements\n    this.pickerToggle = querySelector('.picker-toggle', parent) as HTMLElement;\n    this.menuToggle = querySelector('.menu-toggle', parent) as HTMLElement;\n    this.colorPicker = colorPicker;\n    this.colorMenu = colorMenu;\n    this.inputs = [...getElementsByClassName('color-input', parent)] as HTMLInputElement[];\n    const [controls] = getElementsByClassName('color-controls', parent);\n    this.controls = controls;\n    this.controlKnobs = [...getElementsByClassName('knob', controls)];\n    this.visuals = [...getElementsByClassName('visual-control', controls)];\n\n    // update colour picker controls, inputs and visuals\n    this.update();\n    // console.log(this)\n\n    // add main events listeners\n    toggleEvents(this, true);\n\n    // set component data\n    Data.set(input, colorPickerString, this);\n  }\n\n  /** Returns the current colour value */\n  get value(): string {\n    return this.input.value;\n  }\n\n  /**\n   * Sets a new colour value.\n   *\n   * @param {string} v new colour value\n   */\n  set value(v: string) {\n    this.input.value = v;\n  }\n\n  /** Check if the colour presets include any non-colour. */\n  get hasNonColor(): boolean {\n    return this.colorKeywords instanceof Array && this.colorKeywords.some(x => nonColors.includes(x));\n  }\n\n  /** Returns hexadecimal value of the current colour. */\n  get hex(): string {\n    return this.color.toHex(true);\n  }\n\n  /** Returns the current colour value in {h,s,v,a} object format. */\n  get hsv(): HSVA {\n    return this.color.toHsv();\n  }\n\n  /** Returns the current colour value in {h,s,l,a} object format. */\n  get hsl(): HSLA {\n    return this.color.toHsl();\n  }\n\n  /** Returns the current colour value in {h,w,b,a} object format. */\n  get hwb(): HWBA {\n    return this.color.toHwb();\n  }\n\n  /** Returns the current colour value in {r,g,b,a} object format. */\n  get rgb(): RGBA {\n    return this.color.toRgb();\n  }\n\n  /** Returns the current colour brightness. */\n  get brightness(): number {\n    return this.color.brightness;\n  }\n\n  /** Returns the current colour luminance. */\n  get luminance(): number {\n    return this.color.luminance;\n  }\n\n  /** Checks if the current colour requires a light text colour. */\n  get isDark(): boolean {\n    const { color, brightness } = this;\n    return brightness < 120 && color.a > 0.33;\n  }\n\n  /** Checks if the current input value is a valid colour. */\n  get isValid(): boolean {\n    const inputValue = this.input.value;\n    return inputValue !== '' && new Color(inputValue).isValid;\n  }\n\n  /** Returns the colour appearance, usually the closest colour name for the current value. */\n  get appearance(): string {\n    const { colorLabels, hsl, hsv, format } = this;\n\n    const hue = roundPart(hsl.h * 360);\n    const saturationSource = format === 'hsl' ? hsl.s : hsv.s;\n    const saturation = roundPart(saturationSource * 100);\n    const lightness = roundPart(hsl.l * 100);\n    const hsvl = hsv.v * 100;\n\n    let colorName = 'black';\n\n    // determine color appearance\n    /* istanbul ignore else */\n    if (lightness === 100 && saturation === 0) {\n      colorName = colorLabels.white;\n    } else if (lightness === 0) {\n      colorName = colorLabels.black;\n    } else if (saturation === 0) {\n      colorName = colorLabels.grey;\n    } else if (hue < 15 || hue >= 345) {\n      colorName = colorLabels.red;\n    } else if (hue >= 15 && hue < 45) {\n      colorName = hsvl > 80 && saturation > 80 ? colorLabels.orange : colorLabels.brown;\n    } else if (hue >= 45 && hue < 75) {\n      const isGold = hue > 46 && hue < 54 && hsvl < 80 && saturation > 90;\n      const isOlive = hue >= 54 && hue < 75 && hsvl < 80;\n      colorName = isGold ? colorLabels.gold : colorLabels.yellow;\n      colorName = isOlive ? colorLabels.olive : colorName;\n    } else if (hue >= 75 && hue < 155) {\n      colorName = hsvl < 68 ? colorLabels.green : colorLabels.lime;\n    } else if (hue >= 155 && hue < 175) {\n      colorName = colorLabels.teal;\n    } else if (hue >= 175 && hue < 195) {\n      colorName = colorLabels.cyan;\n    } else if (hue >= 195 && hue < 255) {\n      colorName = colorLabels.blue;\n    } else if (hue >= 255 && hue < 270) {\n      colorName = colorLabels.violet;\n    } else if (hue >= 270 && hue < 295) {\n      colorName = colorLabels.magenta;\n    } else if (hue >= 295 && hue < 345) {\n      colorName = colorLabels.pink;\n    }\n    return colorName;\n  }\n\n  /** Updates `ColorPicker` visuals. */\n  updateVisuals(): void {\n    const { controlPositions, visuals } = this;\n    const [v1, v2, v3] = visuals;\n    const { offsetHeight } = v1;\n    const hue = controlPositions.c2y / offsetHeight;\n    const { r, g, b } = new Color({ h: hue, s: 1, l: 0.5 }).toRgb();\n    const whiteGrad = 'linear-gradient(rgb(255,255,255) 0%, rgb(255,255,255) 100%)';\n    const alpha = 1 - controlPositions.c3y / offsetHeight;\n    const roundA = roundPart(alpha * 100) / 100;\n\n    const fill = new Color({\n      h: hue,\n      s: 1,\n      l: 0.5,\n      a: alpha,\n    }).toRgbString();\n    const hueGradient = `linear-gradient(\n      rgb(255,0,0) 0%, rgb(255,255,0) 16.67%,\n      rgb(0,255,0) 33.33%, rgb(0,255,255) 50%,\n      rgb(0,0,255) 66.67%, rgb(255,0,255) 83.33%,\n      rgb(255,0,0) 100%)`;\n    setElementStyle(v1, {\n      background: `linear-gradient(rgba(0,0,0,0) 0%, rgba(0,0,0,${roundA}) 100%),\n      linear-gradient(to right, rgba(255,255,255,${roundA}) 0%, ${fill} 100%),\n      ${whiteGrad}`,\n    });\n    setElementStyle(v2, { background: hueGradient });\n\n    setElementStyle(v3, {\n      background: `linear-gradient(rgba(${r},${g},${b},1) 0%,rgba(${r},${g},${b},0) 100%)`,\n    });\n  }\n\n  /**\n   * The `ColorPicker` *focusout* event listener when open.\n   *\n   * @param e\n   * @this {ColorPicker}\n   */\n  handleFocusOut = ({ relatedTarget }: FocusEvent & { relatedTarget: HTMLElement }): void => {\n    if (relatedTarget && !this.parent.contains(relatedTarget)) {\n      this.hide(true);\n    }\n  };\n\n  /**\n   * The `ColorPicker` *keyup* event listener when open.\n   *\n   * @param e\n   * @this {ColorPicker}\n   */\n  handleDismiss = ({ code }: KeyboardEvent): void => {\n    if (this.isOpen && code === keyEscape) {\n      this.hide();\n    }\n  };\n\n  /**\n   * The `ColorPicker` *scroll* event listener when open.\n   *\n   * @param e\n   */\n  handleScroll = (e: Event) => {\n    const { activeElement } = getDocument(this.input);\n\n    this.updateDropdownPosition();\n\n    /* istanbul ignore next */\n    if (\n      ([pointermoveEvent, touchmoveEvent].includes(e.type) && this.dragElement) ||\n      (activeElement && this.controlKnobs.includes(activeElement as HTMLElement))\n    ) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * The `ColorPicker` keyboard event listener for menu navigation.\n   *\n   * @param e\n   */\n  menuKeyHandler = (e: KeyboardEvent & { target: HTMLElement }) => {\n    const { target, code } = e;\n    const { previousElementSibling, nextElementSibling, parentElement } = target;\n    const isColorOptionsMenu = parentElement && hasClass(parentElement, 'color-options');\n    const allSiblings = parentElement ? [...parentElement.children] : [];\n    const columnsCount =\n      isColorOptionsMenu && getElementStyle(parentElement, 'grid-template-columns').split(' ').length;\n    const currentIndex = allSiblings.indexOf(target);\n    const previousElement = currentIndex > -1 && columnsCount && allSiblings[currentIndex - columnsCount];\n    const nextElement = currentIndex > -1 && columnsCount && allSiblings[currentIndex + columnsCount];\n\n    if ([keyArrowDown, keyArrowUp, keySpace].includes(code)) {\n      // prevent scroll when navigating the menu via arrow keys / Space\n      e.preventDefault();\n    }\n    if (isColorOptionsMenu) {\n      if (previousElement && code === keyArrowUp) {\n        focus(previousElement as HTMLElement);\n      } else if (nextElement && code === keyArrowDown) {\n        focus(nextElement as HTMLElement);\n      } else if (previousElementSibling && code === keyArrowLeft) {\n        focus(previousElementSibling as HTMLElement);\n      } else if (nextElementSibling && code === keyArrowRight) {\n        focus(nextElementSibling as HTMLElement);\n      }\n    } else if (previousElementSibling && [keyArrowLeft, keyArrowUp].includes(code)) {\n      focus(previousElementSibling as HTMLElement);\n    } else if (nextElementSibling && [keyArrowRight, keyArrowDown].includes(code)) {\n      focus(nextElementSibling as HTMLElement);\n    }\n\n    if ([keyEnter, keySpace].includes(code)) {\n      this.menuClickHandler(e);\n    }\n  };\n\n  /**\n   * The `ColorPicker` click event listener for the colour menu presets / defaults.\n   *\n   * @param e\n   * @this {ColorPicker}\n   */\n  menuClickHandler = (e: Event) => {\n    const { target } = e;\n    const { colorMenu } = this;\n    const newOption = (getAttribute(target as HTMLElement, 'data-value') || '').trim();\n    // invalidate for targets other than color options\n    if (!newOption.length) return;\n    const currentActive = querySelector('li.active', colorMenu);\n    let newColor = newOption;\n    newColor = nonColors.includes(newColor) ? 'white' : newColor;\n    newColor = newColor === 'transparent' ? 'rgba(0,0,0,0)' : newColor;\n\n    const { r, g, b, a } = new Color(newColor);\n\n    ObjectAssign(this.color, {\n      r,\n      g,\n      b,\n      a,\n    });\n\n    this.update();\n\n    /* istanbul ignore else */\n    if (currentActive !== target) {\n      /* istanbul ignore else */\n      if (currentActive) {\n        removeClass(currentActive, 'active');\n        removeAttribute(currentActive, ariaSelected);\n      }\n\n      addClass(target as HTMLElement, 'active');\n      setAttribute(target as HTMLElement, ariaSelected, 'true');\n\n      if (nonColors.includes(newOption)) {\n        this.value = newOption;\n      }\n      firePickerChange(this);\n    }\n  };\n\n  /**\n   * The `ColorPicker` *touchstart* / *mousedown* events listener for control knobs.\n   *\n   * @param e\n   */\n  pointerDown = (e: PointerEvent & { target: HTMLElement }) => {\n    if (e.button !== 0) return;\n    const { target, pageX, pageY } = e;\n    const { colorMenu, visuals, controlKnobs } = this;\n    const [v1, v2, v3] = visuals;\n    const [c1, c2, c3] = controlKnobs;\n    const visual = controlKnobs.includes(target) ? (target.previousElementSibling as HTMLElement) : target;\n    const visualRect = getBoundingClientRect(visual);\n    const html = getDocumentElement(v1);\n    const offsetX = pageX - html.scrollLeft - visualRect.left;\n    const offsetY = pageY - html.scrollTop - visualRect.top;\n\n    /* istanbul ignore else */\n    if (target === v1 || target === c1) {\n      this.dragElement = visual;\n      this.changeControl1(offsetX, offsetY);\n    } else if (target === v2 || target === c2) {\n      this.dragElement = visual;\n      this.changeControl2(offsetY);\n    } else if (target === v3 || target === c3) {\n      this.dragElement = visual;\n      this.changeAlpha(offsetY);\n    }\n\n    if (colorMenu) {\n      const currentActive = querySelector('li.active', colorMenu);\n      if (currentActive) {\n        removeClass(currentActive, 'active');\n        removeAttribute(currentActive, ariaSelected);\n      }\n    }\n    e.preventDefault();\n  };\n\n  /**\n   * The `ColorPicker` *touchend* / *mouseup* events listener for control knobs.\n   *\n   * @param e\n   * @this\n   */\n  pointerUp = ({ target }: PointerEvent & { target: HTMLElement }) => {\n    const { parent } = this;\n    const doc = getDocument(parent);\n    const currentOpen = querySelector(`${colorPickerParentSelector}.open`, doc) !== null;\n    const selection = doc.getSelection();\n\n    if (!this.dragElement && (!selection || !selection.toString().length) && !parent.contains(target)) {\n      this.hide(currentOpen);\n    }\n\n    this.dragElement = undefined;\n  };\n\n  /**\n   * The `ColorPicker` *touchmove* / *mousemove* events listener for control knobs.\n   *\n   * @param {PointerEvent} e\n   */\n  pointerMove = (e: PointerEvent) => {\n    const { dragElement, visuals } = this;\n    const [v1, v2, v3] = visuals;\n    const { pageX, pageY } = e;\n\n    if (!dragElement) return;\n\n    const controlRect = getBoundingClientRect(dragElement);\n    const win = getDocumentElement(v1);\n    const offsetX = pageX - win.scrollLeft - controlRect.left;\n    const offsetY = pageY - win.scrollTop - controlRect.top;\n\n    if (dragElement === v1) {\n      this.changeControl1(offsetX, offsetY);\n    }\n\n    if (dragElement === v2) {\n      this.changeControl2(offsetY);\n    }\n\n    if (dragElement === v3) {\n      this.changeAlpha(offsetY);\n    }\n  };\n\n  /**\n   * The `ColorPicker` *keydown* event listener for control knobs.\n   *\n   * @param e\n   */\n  handleKnobs = (e: Event & { code: string }) => {\n    const { target, code } = e;\n\n    // only react to arrow buttons\n    if (![keyArrowUp, keyArrowDown, keyArrowLeft, keyArrowRight].includes(code)) return;\n    e.preventDefault();\n\n    const { controlKnobs, visuals } = this;\n    const { offsetWidth, offsetHeight } = visuals[0];\n    const [c1, c2, c3] = controlKnobs;\n    const { activeElement } = getDocument(c1);\n    const currentKnob = controlKnobs.find(x => x === activeElement);\n    const yRatio = offsetHeight / 360;\n\n    /* istanbul ignore else */\n    if (currentKnob) {\n      let offsetX = 0;\n      let offsetY = 0;\n\n      /* istanbul ignore else */\n      if (target === c1) {\n        const xRatio = offsetWidth / 100;\n\n        /* istanbul ignore else */\n        if ([keyArrowLeft, keyArrowRight].includes(code)) {\n          this.controlPositions.c1x += code === keyArrowRight ? xRatio : -xRatio;\n        } else if ([keyArrowUp, keyArrowDown].includes(code)) {\n          this.controlPositions.c1y += code === keyArrowDown ? yRatio : -yRatio;\n        }\n\n        offsetX = this.controlPositions.c1x;\n        offsetY = this.controlPositions.c1y;\n        this.changeControl1(offsetX, offsetY);\n      } else if (target === c2) {\n        this.controlPositions.c2y += [keyArrowDown, keyArrowRight].includes(code) ? yRatio : -yRatio;\n\n        offsetY = this.controlPositions.c2y;\n        this.changeControl2(offsetY);\n      } else if (target === c3) {\n        this.controlPositions.c3y += [keyArrowDown, keyArrowRight].includes(code) ? yRatio : -yRatio;\n\n        offsetY = this.controlPositions.c3y;\n        this.changeAlpha(offsetY);\n      }\n      this.handleScroll(e);\n    }\n  };\n\n  /** The event listener of the colour form inputs. */\n  changeHandler = (): void => {\n    let colorSource;\n    const { inputs, format, value: currentValue, input, controlPositions, visuals } = this;\n    const { activeElement } = getDocument(input);\n    const { offsetHeight } = visuals[0];\n    const [i1, , , i4] = inputs;\n    const [v1, v2, v3, v4] =\n      format === 'rgb'\n        ? inputs.map(i => parseFloat(i.value) / (i === i4 ? 100 : 1))\n        : inputs.map(i => parseFloat(i.value) / (i !== i1 ? 100 : 360));\n    const isNonColorValue = this.hasNonColor && nonColors.includes(currentValue);\n    const alpha = i4 ? v4 : 1 - controlPositions.c3y / offsetHeight;\n\n    /* istanbul ignore else */\n    if (activeElement === input || (activeElement && inputs.includes(activeElement as HTMLInputElement))) {\n      if (activeElement === input) {\n        if (isNonColorValue) {\n          colorSource = currentValue === 'transparent' ? 'rgba(0,0,0,0)' : 'rgb(0,0,0)';\n        } else {\n          colorSource = currentValue;\n        }\n      } else if (format === 'hex') {\n        colorSource = i1.value;\n      } else if (format === 'hsl') {\n        colorSource = {\n          h: v1,\n          s: v2,\n          l: v3,\n          a: alpha,\n        };\n      } else if (format === 'hwb') {\n        colorSource = {\n          h: v1,\n          w: v2,\n          b: v3,\n          a: alpha,\n        };\n      } else {\n        colorSource = {\n          r: v1,\n          g: v2,\n          b: v3,\n          a: alpha,\n        };\n      }\n\n      const { r, g, b, a } = new Color(colorSource);\n\n      ObjectAssign(this.color, {\n        r,\n        g,\n        b,\n        a,\n      });\n      this.setControlPositions();\n      this.updateAppearance();\n      this.updateInputs();\n      this.updateControls();\n      this.updateVisuals();\n\n      // set non-color keyword\n      if (activeElement === input && isNonColorValue) {\n        this.value = currentValue;\n      }\n    }\n  };\n\n  /**\n   * Updates `ColorPicker` first control:\n   * * `lightness` and `saturation` for HEX/RGB;\n   * * `lightness` and `hue` for HSL.\n   *\n   * @param X the X component of the offset\n   * @param Y the Y component of the offset\n   */\n  changeControl1(X: number, Y: number): void {\n    let [offsetX, offsetY] = [0, 0];\n    const { controlPositions, visuals } = this;\n    const { offsetHeight, offsetWidth } = visuals[0];\n\n    if (X > offsetWidth) offsetX = offsetWidth;\n    else if (X >= 0) offsetX = X;\n\n    if (Y > offsetHeight) offsetY = offsetHeight;\n    else if (Y >= 0) offsetY = Y;\n\n    const hue = controlPositions.c2y / offsetHeight;\n\n    const saturation = offsetX / offsetWidth;\n\n    const lightness = 1 - offsetY / offsetHeight;\n    const alpha = 1 - controlPositions.c3y / offsetHeight;\n\n    // new color\n    const { r, g, b, a } = new Color({\n      h: hue,\n      s: saturation,\n      v: lightness,\n      a: alpha,\n    });\n\n    ObjectAssign(this.color, {\n      r,\n      g,\n      b,\n      a,\n    });\n\n    // new positions\n    this.controlPositions.c1x = offsetX;\n    this.controlPositions.c1y = offsetY;\n\n    // update color picker\n    this.updateAppearance();\n    this.updateInputs();\n    this.updateControls();\n    this.updateVisuals();\n  }\n\n  /**\n   * Updates `ColorPicker` second control:\n   * * `hue` for HEX/RGB/HWB;\n   * * `saturation` for HSL.\n   *\n   * @param Y the Y offset\n   */\n  changeControl2(Y: number) {\n    const { controlPositions, visuals } = this;\n    const { offsetHeight, offsetWidth } = visuals[0];\n\n    let offsetY = 0;\n\n    if (Y > offsetHeight) offsetY = offsetHeight;\n    else if (Y >= 0) offsetY = Y;\n\n    const hue = offsetY / offsetHeight;\n    const saturation = controlPositions.c1x / offsetWidth;\n    const lightness = 1 - controlPositions.c1y / offsetHeight;\n    const alpha = 1 - controlPositions.c3y / offsetHeight;\n\n    // new color\n    const { r, g, b, a } = new Color({\n      h: hue,\n      s: saturation,\n      v: lightness,\n      a: alpha,\n    });\n\n    ObjectAssign(this.color, {\n      r,\n      g,\n      b,\n      a,\n    });\n\n    // new position\n    this.controlPositions.c2y = offsetY;\n    // update color picker\n    this.updateAppearance();\n    this.updateInputs();\n    this.updateControls();\n    this.updateVisuals();\n  }\n\n  /**\n   * Updates `ColorPicker` last control,\n   * the `alpha` channel.\n   *\n   * @param Y\n   */\n  changeAlpha(Y: number) {\n    const { visuals } = this;\n    const { offsetHeight } = visuals[0];\n    let offsetY = 0;\n\n    if (Y > offsetHeight) offsetY = offsetHeight;\n    else if (Y >= 0) offsetY = Y;\n\n    // update color alpha\n    const alpha = 1 - offsetY / offsetHeight;\n    this.color.setAlpha(alpha);\n    // update position\n    this.controlPositions.c3y = offsetY;\n    // update color picker\n    this.updateAppearance();\n    this.updateInputs();\n    this.updateControls();\n    this.updateVisuals();\n  }\n\n  /**\n   * Updates `ColorPicker` control positions on:\n   * * initialization\n   * * window resize\n   */\n  update = () => {\n    this.updateDropdownPosition();\n    this.updateAppearance();\n    this.setControlPositions();\n    this.updateInputs(true);\n    this.updateControls();\n    this.updateVisuals();\n  };\n\n  /** Updates the open dropdown position on *scroll* event. */\n  updateDropdownPosition() {\n    const { input, colorPicker, colorMenu } = this;\n    const elRect = getBoundingClientRect(input);\n    const { top, bottom } = elRect;\n    const { offsetHeight: elHeight } = input;\n    const windowHeight = getDocumentElement(input).clientHeight;\n    const isPicker = hasClass(colorPicker, 'show');\n    const dropdown = isPicker ? colorPicker : colorMenu;\n    if (!dropdown) return;\n    const { offsetHeight: dropHeight } = dropdown;\n    const distanceBottom = windowHeight - bottom;\n    const distanceTop = top;\n    const bottomExceed = top + dropHeight + elHeight > windowHeight; // show\n    const topExceed = top - dropHeight < 0; // show-top\n\n    if ((hasClass(dropdown, 'bottom') || !topExceed) && distanceBottom < distanceTop && bottomExceed) {\n      removeClass(dropdown, 'bottom');\n      addClass(dropdown, 'top');\n    } else {\n      removeClass(dropdown, 'top');\n      addClass(dropdown, 'bottom');\n    }\n  }\n\n  /** Updates control knobs' positions. */\n  setControlPositions() {\n    const { visuals, color, hsv } = this;\n    const { offsetHeight, offsetWidth } = visuals[0];\n    const alpha = color.a;\n    const hue = hsv.h;\n\n    const saturation = hsv.s;\n    const lightness = hsv.v;\n\n    this.controlPositions.c1x = saturation * offsetWidth;\n    this.controlPositions.c1y = (1 - lightness) * offsetHeight;\n    this.controlPositions.c2y = hue * offsetHeight;\n    this.controlPositions.c3y = (1 - alpha) * offsetHeight;\n  }\n\n  /** Update the visual appearance label and control knob labels. */\n  updateAppearance() {\n    const { componentLabels, color, parent, hsv, hex, format, controlKnobs } = this;\n    const { appearanceLabel, hexLabel, valueLabel } = componentLabels;\n    let { r, g, b } = color.toRgb();\n    const [knob1, knob2, knob3] = controlKnobs;\n    const hue = roundPart(hsv.h * 360);\n    const alpha = color.a;\n    const saturation = roundPart(hsv.s * 100);\n    const lightness = roundPart(hsv.v * 100);\n    const colorName = this.appearance;\n\n    let colorLabel = `${hexLabel} ${hex.split('').join(' ')}`;\n\n    if (format === 'hwb') {\n      const { hwb } = this;\n      const whiteness = roundPart(hwb.w * 100);\n      const blackness = roundPart(hwb.b * 100);\n      colorLabel = `HWB: ${hue}°, ${whiteness}%, ${blackness}%`;\n      setAttribute(knob1, ariaValueText, `${whiteness}% & ${blackness}%`);\n      setAttribute(knob1, ariaValueNow, `${whiteness}`);\n      setAttribute(knob2, ariaDescription, `${valueLabel}: ${colorLabel}. ${appearanceLabel}: ${colorName}.`);\n      setAttribute(knob2, ariaValueText, `${hue}%`);\n      setAttribute(knob2, ariaValueNow, `${hue}`);\n    } else {\n      [r, g, b] = [r, g, b].map(roundPart);\n      colorLabel = format === 'hsl' ? `HSL: ${hue}°, ${saturation}%, ${lightness}%` : colorLabel;\n      colorLabel = format === 'rgb' ? `RGB: ${r}, ${g}, ${b}` : colorLabel;\n\n      setAttribute(knob1, ariaValueText, `${lightness}% & ${saturation}%`);\n      setAttribute(knob1, ariaValueNow, `${lightness}`);\n      setAttribute(knob2, ariaDescription, `${valueLabel}: ${colorLabel}. ${appearanceLabel}: ${colorName}.`);\n      setAttribute(knob2, ariaValueText, `${hue}°`);\n      setAttribute(knob2, ariaValueNow, `${hue}`);\n    }\n\n    const alphaValue = roundPart(alpha * 100);\n    setAttribute(knob3, ariaValueText, `${alphaValue}%`);\n    setAttribute(knob3, ariaValueNow, `${alphaValue}`);\n\n    // update the input backgroundColor\n    const newColor = color.toString();\n    setElementStyle(this.input, { backgroundColor: newColor });\n\n    // toggle dark/light classes will also style the placeholder\n    // dark sets color white, light sets color black\n    // isDark ? '#000' : '#fff'\n    if (!this.isDark) {\n      if (hasClass(parent, 'txt-dark')) removeClass(parent, 'txt-dark');\n      if (!hasClass(parent, 'txt-light')) addClass(parent, 'txt-light');\n    } else {\n      if (hasClass(parent, 'txt-light')) removeClass(parent, 'txt-light');\n      if (!hasClass(parent, 'txt-dark')) addClass(parent, 'txt-dark');\n    }\n  }\n\n  /** Updates the control knobs actual positions. */\n  updateControls() {\n    const { controlKnobs, controlPositions } = this;\n    let { c1x, c1y, c2y, c3y } = controlPositions;\n    const [control1, control2, control3] = controlKnobs;\n    // round control positions\n    [c1x, c1y, c2y, c3y] = [c1x, c1y, c2y, c3y].map(roundPart);\n\n    setElementStyle(control1, {\n      transform: `translate3d(${c1x - 4}px,${c1y - 4}px,0)`,\n    });\n    setElementStyle(control2, { transform: `translate3d(0,${c2y - 4}px,0)` });\n    setElementStyle(control3, { transform: `translate3d(0,${c3y - 4}px,0)` });\n  }\n\n  /**\n   * Updates all color form inputs.\n   *\n   * @param isPrevented when `true`, the component original event is prevented\n   */\n  updateInputs(isPrevented?: boolean) {\n    const { value: oldColor, format, inputs, color, hsl } = this;\n    const [i1, i2, i3, i4] = inputs;\n    const alpha = roundPart(color.a * 100);\n    const hue = roundPart(hsl.h * 360);\n    let newColor = color.toString();\n\n    /* istanbul ignore else */\n    if (format === 'hex') {\n      newColor = this.color.toHexString(true);\n      i1.value = this.hex;\n    } else if (format === 'hsl') {\n      const lightness = roundPart(hsl.l * 100);\n      const saturation = roundPart(hsl.s * 100);\n      newColor = this.color.toHslString();\n      i1.value = `${hue}`;\n      i2.value = `${saturation}`;\n      i3.value = `${lightness}`;\n      i4.value = `${alpha}`;\n    } else if (format === 'hwb') {\n      const { w, b } = this.hwb;\n      const whiteness = roundPart(w * 100);\n      const blackness = roundPart(b * 100);\n\n      newColor = this.color.toHwbString();\n      i1.value = `${hue}`;\n      i2.value = `${whiteness}`;\n      i3.value = `${blackness}`;\n      i4.value = `${alpha}`;\n    } else if (format === 'rgb') {\n      let { r, g, b } = this.rgb;\n      [r, g, b] = [r, g, b].map(roundPart);\n\n      newColor = this.color.toRgbString();\n      i1.value = `${r}`;\n      i2.value = `${g}`;\n      i3.value = `${b}`;\n      i4.value = `${alpha}`;\n    }\n\n    // update the color value\n    this.value = newColor;\n\n    // don't trigger the custom event unless it's really changed\n    if (!isPrevented && newColor !== oldColor) {\n      firePickerChange(this);\n    }\n  }\n\n  /**\n   * Toggle the `ColorPicker` dropdown visibility.\n   *\n   * @param e\n   */\n  togglePicker = (e?: Event) => {\n    if (e) e.preventDefault();\n    const { colorPicker } = this;\n\n    if (this.isOpen && hasClass(colorPicker, 'show')) {\n      this.hide(true);\n    } else {\n      showDropdown(this, colorPicker);\n    }\n  };\n\n  /** Shows the `ColorPicker` dropdown. */\n  showPicker = () => {\n    const { colorPicker } = this;\n\n    if (!['top', 'bottom'].some(c => hasClass(colorPicker, c))) {\n      showDropdown(this, colorPicker);\n    }\n  };\n\n  /**\n   * Toggles the visibility of the `ColorPicker` presets menu.\n   *\n   * @param e\n   * @this {ColorPicker}\n   */\n  toggleMenu = (e?: Event) => {\n    if (e) e.preventDefault();\n    const { colorMenu } = this;\n\n    if (this.isOpen && hasClass(colorMenu, 'show')) {\n      this.hide(true);\n    } else {\n      showDropdown(this, colorMenu);\n    }\n  };\n\n  /**\n   * Hides the currently open `ColorPicker` dropdown.\n   *\n   * @param {boolean=} focusPrevented\n   */\n  hide(focusPrevented?: boolean) {\n    if (this.isOpen) {\n      const { pickerToggle, menuToggle, colorPicker, colorMenu, parent, input } = this;\n      const openPicker = hasClass(colorPicker, 'show');\n      const openDropdown = openPicker ? colorPicker : colorMenu;\n      const relatedBtn = openPicker ? pickerToggle : menuToggle;\n      const animationDuration = openDropdown && getElementTransitionDuration(openDropdown);\n\n      this.value = this.color.toString(true);\n\n      /* istanbul ignore else */\n      if (openDropdown) {\n        removeClass(openDropdown, 'show');\n        setAttribute(relatedBtn, ariaExpanded, 'false');\n        setTimeout(() => {\n          removePosition(openDropdown);\n          /* istanbul ignore else */\n          if (!querySelector('.show', parent)) {\n            removeClass(parent, 'open');\n            toggleEventsOnShown(this);\n            this.isOpen = false;\n          }\n        }, animationDuration);\n      }\n\n      if (!focusPrevented) {\n        focus(pickerToggle);\n      }\n      setAttribute(input, tabindex, '-1');\n      if (relatedBtn === menuToggle) {\n        setAttribute(menuToggle, tabindex, '-1');\n      }\n    }\n  }\n\n  /** Removes `ColorPicker` from target `<input>`. */\n  dispose() {\n    const { input, parent } = this;\n    this.hide(true);\n    toggleEvents(this);\n    [...parent.children].forEach(el => {\n      if (el !== input) el.remove();\n    });\n\n    removeAttribute(input, tabindex);\n    setElementStyle(input, { backgroundColor: '' });\n\n    ['txt-light', 'txt-dark'].forEach(c => removeClass(parent, c));\n    Data.remove(input, colorPickerString);\n  }\n}\n"],"names":["me","ge","Ae","ke","Me","K","P","_","tt","st","rt","it","St","kt","Mt","Ct","zt","Bt","Re","Qe","je","qe","Ye","$e","sn","Rt","U","fn","jt","A","qt","S","z","t","x","N","Gt","e","n","o","s","Jt","Kt","r","Xt","Yt","Tn","Cn","Ln","In","zn","v","i","u","E","L","Hn","k","W","R","d","M","Zt","$t","Q","g","ne","Qn","V","w","oe","jn","a","l","p","m","y","j","Kn","Zn","$n","I","to","h","T","B","H","b","ae","ie","le","So","To","D","F","rr","tr","O","er","$","f","Z","c","J","G","X","C","Y","q","sr","ColorPalette","Color","args","hue","hueSteps","lightSteps","lightnessArray","saturation","colors","hueStep","half","steps1To13","lightSets","closestSet","set","lightStep","currentHue","newColor","colorPickerLabels","colorNames","isValidJSON","str","isString","vHidden","getColorForm","self","format","id","componentLabels","colorForm","createElement","components","toUpperCase","cID","formatLabel","cInputLabel","setAttribute","cInput","max","step","ObjectAssign","getColorControls","hueLabel","alphaLabel","lightnessLabel","saturationLabel","whitenessLabel","blacknessLabel","max1","max2","max3","ctrl1Label","ctrl2Label","colorControls","colorPointer","colorSlider","template","min","control","knob","getColorMenu","colorsSource","menuClass","input","defaultsLabel","presetsLabel","isOptionsMenu","isPalette","menuLabel","colorsArray","colorsCount","fit","isMultiLine","rowCountHover","rowCount","isScrollable","finalClass","gap","optionSize","menuHeight","menuHeightHover","menu","setElementStyle","value","label","isActive","getAttribute","option","setMarkup","parent","colorKeywords","colorPresets","colorValue","nonColors","toggleLabel","pickerLabel","hexLabel","color","formatString","pickerBtn","pickerDropdown","presetsDropdown","presetsBtn","xmlns","presetsIcon","createElementNS","ariaHidden","path","tabindex","colorPickerString","colorPickerSelector","colorPickerParentSelector","colorPickerDefaults","roundPart","getColorPickerInstance","element","getInstance","initColorPicker","ColorPicker","toggleEvents","action","on","off","pickerToggle","menuToggle","focusinEvent","mouseclickEvent","toggleEventsOnShown","colorMenu","doc","getDocument","win","getWindow","pointerdownEvent","keydownEvent","scrollEvent","resizeEvent","changeEvent","pointermoveEvent","pointerupEvent","focusoutEvent","keyupEvent","firePickerChange","dispatchEvent","removePosition","removeClass","showDropdown","dropdown","colorPicker","isPicker","openDropdown","activeBtn","nextBtn","hasClass","addClass","reflow","ariaExpanded","getBoundingClientRect","version","ObjectFromEntries","target","config","querySelector","closest","getUID","colorLabels","normalizeOptions","translatedColorLabels","isArray","tempComponentLabels","getElementsByClassName","controls","Data","brightness","inputValue","hsl","hsv","saturationSource","lightness","hsvl","colorName","isGold","isOlive","controlPositions","visuals","v1","v2","v3","offsetHeight","whiteGrad","alpha","roundA","fill","hueGradient","relatedTarget","code","keyEscape","activeElement","touchmoveEvent","previousElementSibling","nextElementSibling","parentElement","isColorOptionsMenu","allSiblings","columnsCount","getElementStyle","currentIndex","previousElement","nextElement","keyArrowDown","keyArrowUp","keySpace","focus","keyArrowLeft","keyArrowRight","keyEnter","newOption","currentActive","removeAttribute","ariaSelected","pageX","pageY","controlKnobs","c1","c2","c3","visual","visualRect","html","getDocumentElement","offsetX","offsetY","currentOpen","selection","dragElement","controlRect","offsetWidth","currentKnob","yRatio","xRatio","colorSource","inputs","currentValue","i1","i4","v4","isNonColorValue","elRect","top","bottom","elHeight","windowHeight","dropHeight","distanceBottom","distanceTop","bottomExceed","topExceed","hex","appearanceLabel","valueLabel","knob1","knob2","knob3","colorLabel","hwb","whiteness","blackness","ariaValueText","ariaValueNow","ariaDescription","alphaValue","c1x","c1y","c2y","c3y","control1","control2","control3","isPrevented","oldColor","i2","i3","focusPrevented","openPicker","relatedBtn","animationDuration","getElementTransitionDuration","el"],"mappings":"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GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACF;AAAA,EACD;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,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","x_google_ignoreList":[0,1]}